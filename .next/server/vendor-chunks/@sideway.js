"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sideway";
exports.ids = ["vendor-chunks/@sideway"];
exports.modules = {

/***/ "(rsc)/./node_modules/@sideway/address/lib/domain.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/domain.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Url = __webpack_require__(/*! url */ \"url\");\nconst Errors = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/@sideway/address/lib/errors.js\");\nconst internals = {\n    minDomainSegments: 2,\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    domainControlRx: /[\\x00-\\x20@\\:\\/\\\\#!\\$&\\'\\(\\)\\*\\+,;=\\?]/,\n    tldSegmentRx: /^[a-zA-Z](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    domainSegmentRx: /^[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    URL: Url.URL || URL // $lab:coverage:ignore$\n};\nexports.analyze = function(domain, options = {}) {\n    if (!domain) {\n        return Errors.code(\"DOMAIN_NON_EMPTY_STRING\");\n    }\n    if (typeof domain !== \"string\") {\n        throw new Error(\"Invalid input: domain must be a string\");\n    }\n    if (domain.length > 256) {\n        return Errors.code(\"DOMAIN_TOO_LONG\");\n    }\n    const ascii = !internals.nonAsciiRx.test(domain);\n    if (!ascii) {\n        if (options.allowUnicode === false) {\n            return Errors.code(\"DOMAIN_INVALID_UNICODE_CHARS\");\n        }\n        domain = domain.normalize(\"NFC\");\n    }\n    if (internals.domainControlRx.test(domain)) {\n        return Errors.code(\"DOMAIN_INVALID_CHARS\");\n    }\n    domain = internals.punycode(domain);\n    // https://tools.ietf.org/html/rfc1035 section 2.3.1\n    if (options.allowFullyQualified && domain[domain.length - 1] === \".\") {\n        domain = domain.slice(0, -1);\n    }\n    const minDomainSegments = options.minDomainSegments || internals.minDomainSegments;\n    const segments = domain.split(\".\");\n    if (segments.length < minDomainSegments) {\n        return Errors.code(\"DOMAIN_SEGMENTS_COUNT\");\n    }\n    if (options.maxDomainSegments) {\n        if (segments.length > options.maxDomainSegments) {\n            return Errors.code(\"DOMAIN_SEGMENTS_COUNT_MAX\");\n        }\n    }\n    const tlds = options.tlds;\n    if (tlds) {\n        const tld = segments[segments.length - 1].toLowerCase();\n        if (tlds.deny && tlds.deny.has(tld) || tlds.allow && !tlds.allow.has(tld)) {\n            return Errors.code(\"DOMAIN_FORBIDDEN_TLDS\");\n        }\n    }\n    for(let i = 0; i < segments.length; ++i){\n        const segment = segments[i];\n        if (!segment.length) {\n            return Errors.code(\"DOMAIN_EMPTY_SEGMENT\");\n        }\n        if (segment.length > 63) {\n            return Errors.code(\"DOMAIN_LONG_SEGMENT\");\n        }\n        if (i < segments.length - 1) {\n            if (!internals.domainSegmentRx.test(segment)) {\n                return Errors.code(\"DOMAIN_INVALID_CHARS\");\n            }\n        } else {\n            if (!internals.tldSegmentRx.test(segment)) {\n                return Errors.code(\"DOMAIN_INVALID_TLDS_CHARS\");\n            }\n        }\n    }\n    return null;\n};\nexports.isValid = function(domain, options) {\n    return !exports.analyze(domain, options);\n};\ninternals.punycode = function(domain) {\n    if (domain.includes(\"%\")) {\n        domain = domain.replace(/%/g, \"%25\");\n    }\n    try {\n        return new internals.URL(`http://${domain}`).host;\n    } catch (err) {\n        return domain;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/domain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/email.js":
/*!****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/email.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Util = __webpack_require__(/*! util */ \"util\");\nconst Domain = __webpack_require__(/*! ./domain */ \"(rsc)/./node_modules/@sideway/address/lib/domain.js\");\nconst Errors = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/@sideway/address/lib/errors.js\");\nconst internals = {\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    encoder: new (Util.TextEncoder || TextEncoder)() // $lab:coverage:ignore$\n};\nexports.analyze = function(email, options) {\n    return internals.email(email, options);\n};\nexports.isValid = function(email, options) {\n    return !internals.email(email, options);\n};\ninternals.email = function(email, options = {}) {\n    if (typeof email !== \"string\") {\n        throw new Error(\"Invalid input: email must be a string\");\n    }\n    if (!email) {\n        return Errors.code(\"EMPTY_STRING\");\n    }\n    // Unicode\n    const ascii = !internals.nonAsciiRx.test(email);\n    if (!ascii) {\n        if (options.allowUnicode === false) {\n            return Errors.code(\"FORBIDDEN_UNICODE\");\n        }\n        email = email.normalize(\"NFC\");\n    }\n    // Basic structure\n    const parts = email.split(\"@\");\n    if (parts.length !== 2) {\n        return parts.length > 2 ? Errors.code(\"MULTIPLE_AT_CHAR\") : Errors.code(\"MISSING_AT_CHAR\");\n    }\n    const [local, domain] = parts;\n    if (!local) {\n        return Errors.code(\"EMPTY_LOCAL\");\n    }\n    if (!options.ignoreLength) {\n        if (email.length > 254) {\n            return Errors.code(\"ADDRESS_TOO_LONG\");\n        }\n        if (internals.encoder.encode(local).length > 64) {\n            return Errors.code(\"LOCAL_TOO_LONG\");\n        }\n    }\n    // Validate parts\n    return internals.local(local, ascii) || Domain.analyze(domain, options);\n};\ninternals.local = function(local, ascii) {\n    const segments = local.split(\".\");\n    for (const segment of segments){\n        if (!segment.length) {\n            return Errors.code(\"EMPTY_LOCAL_SEGMENT\");\n        }\n        if (ascii) {\n            if (!internals.atextRx.test(segment)) {\n                return Errors.code(\"INVALID_LOCAL_CHARS\");\n            }\n            continue;\n        }\n        for (const char of segment){\n            if (internals.atextRx.test(char)) {\n                continue;\n            }\n            const binary = internals.binary(char);\n            if (!internals.atomRx.test(binary)) {\n                return Errors.code(\"INVALID_LOCAL_CHARS\");\n            }\n        }\n    }\n};\ninternals.binary = function(char) {\n    return Array.from(internals.encoder.encode(char)).map((v)=>String.fromCharCode(v)).join(\"\");\n};\n/*\n    From RFC 5321:\n\n        Mailbox         =   Local-part \"@\" ( Domain / address-literal )\n\n        Local-part      =   Dot-string / Quoted-string\n        Dot-string      =   Atom *(\".\"  Atom)\n        Atom            =   1*atext\n        atext           =   ALPHA / DIGIT / \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \"/\" / \"=\" / \"?\" / \"^\" / \"_\" / \"`\" / \"{\" / \"|\" / \"}\" / \"~\"\n\n        Domain          =   sub-domain *(\".\" sub-domain)\n        sub-domain      =   Let-dig [Ldh-str]\n        Let-dig         =   ALPHA / DIGIT\n        Ldh-str         =   *( ALPHA / DIGIT / \"-\" ) Let-dig\n\n        ALPHA           =   %x41-5A / %x61-7A        ; a-z, A-Z\n        DIGIT           =   %x30-39                  ; 0-9\n\n    From RFC 6531:\n\n        sub-domain      =/  U-label\n        atext           =/  UTF8-non-ascii\n\n        UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4\n\n        UTF8-2          =   %xC2-DF UTF8-tail\n        UTF8-3          =   %xE0 %xA0-BF UTF8-tail /\n                            %xE1-EC 2( UTF8-tail ) /\n                            %xED %x80-9F UTF8-tail /\n                            %xEE-EF 2( UTF8-tail )\n        UTF8-4          =   %xF0 %x90-BF 2( UTF8-tail ) /\n                            %xF1-F3 3( UTF8-tail ) /\n                            %xF4 %x80-8F 2( UTF8-tail )\n\n        UTF8-tail       =   %x80-BF\n\n    Note: The following are not supported:\n\n        RFC 5321: address-literal, Quoted-string\n        RFC 5322: obs-*, CFWS\n*/ internals.atextRx = /^[\\w!#\\$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~]+$/; // _ included in \\w\ninternals.atomRx = new RegExp([\n    //  %xC2-DF UTF8-tail\n    \"(?:[\\\\xc2-\\\\xdf][\\\\x80-\\\\xbf])\",\n    //  %xE0 %xA0-BF UTF8-tail              %xE1-EC 2( UTF8-tail )            %xED %x80-9F UTF8-tail              %xEE-EF 2( UTF8-tail )\n    \"(?:\\\\xe0[\\\\xa0-\\\\xbf][\\\\x80-\\\\xbf])|(?:[\\\\xe1-\\\\xec][\\\\x80-\\\\xbf]{2})|(?:\\\\xed[\\\\x80-\\\\x9f][\\\\x80-\\\\xbf])|(?:[\\\\xee-\\\\xef][\\\\x80-\\\\xbf]{2})\",\n    //  %xF0 %x90-BF 2( UTF8-tail )            %xF1-F3 3( UTF8-tail )            %xF4 %x80-8F 2( UTF8-tail )\n    \"(?:\\\\xf0[\\\\x90-\\\\xbf][\\\\x80-\\\\xbf]{2})|(?:[\\\\xf1-\\\\xf3][\\\\x80-\\\\xbf]{3})|(?:\\\\xf4[\\\\x80-\\\\x8f][\\\\x80-\\\\xbf]{2})\"\n].join(\"|\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/email.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/address/lib/errors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.codes = {\n    EMPTY_STRING: \"Address must be a non-empty string\",\n    FORBIDDEN_UNICODE: \"Address contains forbidden Unicode characters\",\n    MULTIPLE_AT_CHAR: \"Address cannot contain more than one @ character\",\n    MISSING_AT_CHAR: \"Address must contain one @ character\",\n    EMPTY_LOCAL: \"Address local part cannot be empty\",\n    ADDRESS_TOO_LONG: \"Address too long\",\n    LOCAL_TOO_LONG: \"Address local part too long\",\n    EMPTY_LOCAL_SEGMENT: \"Address local part contains empty dot-separated segment\",\n    INVALID_LOCAL_CHARS: \"Address local part contains invalid character\",\n    DOMAIN_NON_EMPTY_STRING: \"Domain must be a non-empty string\",\n    DOMAIN_TOO_LONG: \"Domain too long\",\n    DOMAIN_INVALID_UNICODE_CHARS: \"Domain contains forbidden Unicode characters\",\n    DOMAIN_INVALID_CHARS: \"Domain contains invalid character\",\n    DOMAIN_INVALID_TLDS_CHARS: \"Domain contains invalid tld character\",\n    DOMAIN_SEGMENTS_COUNT: \"Domain lacks the minimum required number of segments\",\n    DOMAIN_SEGMENTS_COUNT_MAX: \"Domain contains too many segments\",\n    DOMAIN_FORBIDDEN_TLDS: \"Domain uses forbidden TLD\",\n    DOMAIN_EMPTY_SEGMENT: \"Domain contains empty dot-separated segment\",\n    DOMAIN_LONG_SEGMENT: \"Domain contains dot-separated segment that is too long\"\n};\nexports.code = function(code) {\n    return {\n        code,\n        error: exports.codes[code]\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLGFBQWEsR0FBRztJQUNaRSxjQUFjO0lBQ2RDLG1CQUFtQjtJQUNuQkMsa0JBQWtCO0lBQ2xCQyxpQkFBaUI7SUFDakJDLGFBQWE7SUFDYkMsa0JBQWtCO0lBQ2xCQyxnQkFBZ0I7SUFDaEJDLHFCQUFxQjtJQUNyQkMscUJBQXFCO0lBQ3JCQyx5QkFBeUI7SUFDekJDLGlCQUFpQjtJQUNqQkMsOEJBQThCO0lBQzlCQyxzQkFBc0I7SUFDdEJDLDJCQUEyQjtJQUMzQkMsdUJBQXVCO0lBQ3ZCQywyQkFBMkI7SUFDM0JDLHVCQUF1QjtJQUN2QkMsc0JBQXNCO0lBQ3RCQyxxQkFBcUI7QUFDekI7QUFHQXBCLFlBQVksR0FBRyxTQUFVcUIsSUFBSTtJQUV6QixPQUFPO1FBQUVBO1FBQU1DLE9BQU90QixRQUFRQyxLQUFLLENBQUNvQixLQUFLO0lBQUM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YXN0ZWhlcm8vLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvZXJyb3JzLmpzPzQ0MmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmNvZGVzID0ge1xuICAgIEVNUFRZX1NUUklORzogJ0FkZHJlc3MgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmcnLFxuICAgIEZPUkJJRERFTl9VTklDT0RFOiAnQWRkcmVzcyBjb250YWlucyBmb3JiaWRkZW4gVW5pY29kZSBjaGFyYWN0ZXJzJyxcbiAgICBNVUxUSVBMRV9BVF9DSEFSOiAnQWRkcmVzcyBjYW5ub3QgY29udGFpbiBtb3JlIHRoYW4gb25lIEAgY2hhcmFjdGVyJyxcbiAgICBNSVNTSU5HX0FUX0NIQVI6ICdBZGRyZXNzIG11c3QgY29udGFpbiBvbmUgQCBjaGFyYWN0ZXInLFxuICAgIEVNUFRZX0xPQ0FMOiAnQWRkcmVzcyBsb2NhbCBwYXJ0IGNhbm5vdCBiZSBlbXB0eScsXG4gICAgQUREUkVTU19UT09fTE9ORzogJ0FkZHJlc3MgdG9vIGxvbmcnLFxuICAgIExPQ0FMX1RPT19MT05HOiAnQWRkcmVzcyBsb2NhbCBwYXJ0IHRvbyBsb25nJyxcbiAgICBFTVBUWV9MT0NBTF9TRUdNRU5UOiAnQWRkcmVzcyBsb2NhbCBwYXJ0IGNvbnRhaW5zIGVtcHR5IGRvdC1zZXBhcmF0ZWQgc2VnbWVudCcsXG4gICAgSU5WQUxJRF9MT0NBTF9DSEFSUzogJ0FkZHJlc3MgbG9jYWwgcGFydCBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcicsXG4gICAgRE9NQUlOX05PTl9FTVBUWV9TVFJJTkc6ICdEb21haW4gbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmcnLFxuICAgIERPTUFJTl9UT09fTE9ORzogJ0RvbWFpbiB0b28gbG9uZycsXG4gICAgRE9NQUlOX0lOVkFMSURfVU5JQ09ERV9DSEFSUzogJ0RvbWFpbiBjb250YWlucyBmb3JiaWRkZW4gVW5pY29kZSBjaGFyYWN0ZXJzJyxcbiAgICBET01BSU5fSU5WQUxJRF9DSEFSUzogJ0RvbWFpbiBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcicsXG4gICAgRE9NQUlOX0lOVkFMSURfVExEU19DSEFSUzogJ0RvbWFpbiBjb250YWlucyBpbnZhbGlkIHRsZCBjaGFyYWN0ZXInLFxuICAgIERPTUFJTl9TRUdNRU5UU19DT1VOVDogJ0RvbWFpbiBsYWNrcyB0aGUgbWluaW11bSByZXF1aXJlZCBudW1iZXIgb2Ygc2VnbWVudHMnLFxuICAgIERPTUFJTl9TRUdNRU5UU19DT1VOVF9NQVg6ICdEb21haW4gY29udGFpbnMgdG9vIG1hbnkgc2VnbWVudHMnLFxuICAgIERPTUFJTl9GT1JCSURERU5fVExEUzogJ0RvbWFpbiB1c2VzIGZvcmJpZGRlbiBUTEQnLFxuICAgIERPTUFJTl9FTVBUWV9TRUdNRU5UOiAnRG9tYWluIGNvbnRhaW5zIGVtcHR5IGRvdC1zZXBhcmF0ZWQgc2VnbWVudCcsXG4gICAgRE9NQUlOX0xPTkdfU0VHTUVOVDogJ0RvbWFpbiBjb250YWlucyBkb3Qtc2VwYXJhdGVkIHNlZ21lbnQgdGhhdCBpcyB0b28gbG9uZydcbn07XG5cblxuZXhwb3J0cy5jb2RlID0gZnVuY3Rpb24gKGNvZGUpIHtcblxuICAgIHJldHVybiB7IGNvZGUsIGVycm9yOiBleHBvcnRzLmNvZGVzW2NvZGVdIH07XG59O1xuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJjb2RlcyIsIkVNUFRZX1NUUklORyIsIkZPUkJJRERFTl9VTklDT0RFIiwiTVVMVElQTEVfQVRfQ0hBUiIsIk1JU1NJTkdfQVRfQ0hBUiIsIkVNUFRZX0xPQ0FMIiwiQUREUkVTU19UT09fTE9ORyIsIkxPQ0FMX1RPT19MT05HIiwiRU1QVFlfTE9DQUxfU0VHTUVOVCIsIklOVkFMSURfTE9DQUxfQ0hBUlMiLCJET01BSU5fTk9OX0VNUFRZX1NUUklORyIsIkRPTUFJTl9UT09fTE9ORyIsIkRPTUFJTl9JTlZBTElEX1VOSUNPREVfQ0hBUlMiLCJET01BSU5fSU5WQUxJRF9DSEFSUyIsIkRPTUFJTl9JTlZBTElEX1RMRFNfQ0hBUlMiLCJET01BSU5fU0VHTUVOVFNfQ09VTlQiLCJET01BSU5fU0VHTUVOVFNfQ09VTlRfTUFYIiwiRE9NQUlOX0ZPUkJJRERFTl9UTERTIiwiRE9NQUlOX0VNUFRZX1NFR01FTlQiLCJET01BSU5fTE9OR19TRUdNRU5UIiwiY29kZSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/ip.js":
/*!*************************************************!*\
  !*** ./node_modules/@sideway/address/lib/ip.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Assert = __webpack_require__(/*! @hapi/hoek/lib/assert */ \"(rsc)/./node_modules/@hapi/hoek/lib/assert.js\");\nconst Uri = __webpack_require__(/*! ./uri */ \"(rsc)/./node_modules/@sideway/address/lib/uri.js\");\nconst internals = {};\nexports.regex = function(options = {}) {\n    // CIDR\n    Assert(options.cidr === undefined || typeof options.cidr === \"string\", \"options.cidr must be a string\");\n    const cidr = options.cidr ? options.cidr.toLowerCase() : \"optional\";\n    Assert([\n        \"required\",\n        \"optional\",\n        \"forbidden\"\n    ].includes(cidr), \"options.cidr must be one of required, optional, forbidden\");\n    // Versions\n    Assert(options.version === undefined || typeof options.version === \"string\" || Array.isArray(options.version), \"options.version must be a string or an array of string\");\n    let versions = options.version || [\n        \"ipv4\",\n        \"ipv6\",\n        \"ipvfuture\"\n    ];\n    if (!Array.isArray(versions)) {\n        versions = [\n            versions\n        ];\n    }\n    Assert(versions.length >= 1, \"options.version must have at least 1 version specified\");\n    for(let i = 0; i < versions.length; ++i){\n        Assert(typeof versions[i] === \"string\", \"options.version must only contain strings\");\n        versions[i] = versions[i].toLowerCase();\n        Assert([\n            \"ipv4\",\n            \"ipv6\",\n            \"ipvfuture\"\n        ].includes(versions[i]), \"options.version contains unknown version \" + versions[i] + \" - must be one of ipv4, ipv6, ipvfuture\");\n    }\n    versions = Array.from(new Set(versions));\n    // Regex\n    const parts = versions.map((version)=>{\n        // Forbidden\n        if (cidr === \"forbidden\") {\n            return Uri.ip[version];\n        }\n        // Required\n        const cidrpart = `\\\\/${version === \"ipv4\" ? Uri.ip.v4Cidr : Uri.ip.v6Cidr}`;\n        if (cidr === \"required\") {\n            return `${Uri.ip[version]}${cidrpart}`;\n        }\n        // Optional\n        return `${Uri.ip[version]}(?:${cidrpart})?`;\n    });\n    const raw = `(?:${parts.join(\"|\")})`;\n    const regex = new RegExp(`^${raw}$`);\n    return {\n        cidr,\n        versions,\n        regex,\n        raw\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvaXAuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUV2QixNQUFNQyxNQUFNRCxtQkFBT0EsQ0FBQztBQUdwQixNQUFNRSxZQUFZLENBQUM7QUFHbkJDLGFBQWEsR0FBRyxTQUFVRSxVQUFVLENBQUMsQ0FBQztJQUVsQyxPQUFPO0lBRVBOLE9BQU9NLFFBQVFDLElBQUksS0FBS0MsYUFBYSxPQUFPRixRQUFRQyxJQUFJLEtBQUssVUFBVTtJQUN2RSxNQUFNQSxPQUFPRCxRQUFRQyxJQUFJLEdBQUdELFFBQVFDLElBQUksQ0FBQ0UsV0FBVyxLQUFLO0lBQ3pEVCxPQUFPO1FBQUM7UUFBWTtRQUFZO0tBQVksQ0FBQ1UsUUFBUSxDQUFDSCxPQUFPO0lBRTdELFdBQVc7SUFFWFAsT0FBT00sUUFBUUssT0FBTyxLQUFLSCxhQUFhLE9BQU9GLFFBQVFLLE9BQU8sS0FBSyxZQUFZQyxNQUFNQyxPQUFPLENBQUNQLFFBQVFLLE9BQU8sR0FBRztJQUMvRyxJQUFJRyxXQUFXUixRQUFRSyxPQUFPLElBQUk7UUFBQztRQUFRO1FBQVE7S0FBWTtJQUMvRCxJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0MsV0FBVztRQUMxQkEsV0FBVztZQUFDQTtTQUFTO0lBQ3pCO0lBRUFkLE9BQU9jLFNBQVNDLE1BQU0sSUFBSSxHQUFHO0lBRTdCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRixTQUFTQyxNQUFNLEVBQUUsRUFBRUMsRUFBRztRQUN0Q2hCLE9BQU8sT0FBT2MsUUFBUSxDQUFDRSxFQUFFLEtBQUssVUFBVTtRQUN4Q0YsUUFBUSxDQUFDRSxFQUFFLEdBQUdGLFFBQVEsQ0FBQ0UsRUFBRSxDQUFDUCxXQUFXO1FBQ3JDVCxPQUFPO1lBQUM7WUFBUTtZQUFRO1NBQVksQ0FBQ1UsUUFBUSxDQUFDSSxRQUFRLENBQUNFLEVBQUUsR0FBRyw4Q0FBOENGLFFBQVEsQ0FBQ0UsRUFBRSxHQUFHO0lBQzVIO0lBRUFGLFdBQVdGLE1BQU1LLElBQUksQ0FBQyxJQUFJQyxJQUFJSjtJQUU5QixRQUFRO0lBRVIsTUFBTUssUUFBUUwsU0FBU00sR0FBRyxDQUFDLENBQUNUO1FBRXhCLFlBQVk7UUFFWixJQUFJSixTQUFTLGFBQWE7WUFDdEIsT0FBT0wsSUFBSW1CLEVBQUUsQ0FBQ1YsUUFBUTtRQUMxQjtRQUVBLFdBQVc7UUFFWCxNQUFNVyxXQUFXLENBQUMsR0FBRyxFQUFFWCxZQUFZLFNBQVNULElBQUltQixFQUFFLENBQUNFLE1BQU0sR0FBR3JCLElBQUltQixFQUFFLENBQUNHLE1BQU0sQ0FBQyxDQUFDO1FBRTNFLElBQUlqQixTQUFTLFlBQVk7WUFDckIsT0FBTyxDQUFDLEVBQUVMLElBQUltQixFQUFFLENBQUNWLFFBQVEsQ0FBQyxFQUFFVyxTQUFTLENBQUM7UUFDMUM7UUFFQSxXQUFXO1FBRVgsT0FBTyxDQUFDLEVBQUVwQixJQUFJbUIsRUFBRSxDQUFDVixRQUFRLENBQUMsR0FBRyxFQUFFVyxTQUFTLEVBQUUsQ0FBQztJQUMvQztJQUVBLE1BQU1HLE1BQU0sQ0FBQyxHQUFHLEVBQUVOLE1BQU1PLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxNQUFNckIsUUFBUSxJQUFJc0IsT0FBTyxDQUFDLENBQUMsRUFBRUYsSUFBSSxDQUFDLENBQUM7SUFDbkMsT0FBTztRQUFFbEI7UUFBTU87UUFBVVQ7UUFBT29CO0lBQUk7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YXN0ZWhlcm8vLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvaXAuanM/MzdjZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFzc2VydCA9IHJlcXVpcmUoJ0BoYXBpL2hvZWsvbGliL2Fzc2VydCcpO1xuXG5jb25zdCBVcmkgPSByZXF1aXJlKCcuL3VyaScpO1xuXG5cbmNvbnN0IGludGVybmFscyA9IHt9O1xuXG5cbmV4cG9ydHMucmVnZXggPSBmdW5jdGlvbiAob3B0aW9ucyA9IHt9KSB7XG5cbiAgICAvLyBDSURSXG5cbiAgICBBc3NlcnQob3B0aW9ucy5jaWRyID09PSB1bmRlZmluZWQgfHwgdHlwZW9mIG9wdGlvbnMuY2lkciA9PT0gJ3N0cmluZycsICdvcHRpb25zLmNpZHIgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgIGNvbnN0IGNpZHIgPSBvcHRpb25zLmNpZHIgPyBvcHRpb25zLmNpZHIudG9Mb3dlckNhc2UoKSA6ICdvcHRpb25hbCc7XG4gICAgQXNzZXJ0KFsncmVxdWlyZWQnLCAnb3B0aW9uYWwnLCAnZm9yYmlkZGVuJ10uaW5jbHVkZXMoY2lkciksICdvcHRpb25zLmNpZHIgbXVzdCBiZSBvbmUgb2YgcmVxdWlyZWQsIG9wdGlvbmFsLCBmb3JiaWRkZW4nKTtcblxuICAgIC8vIFZlcnNpb25zXG5cbiAgICBBc3NlcnQob3B0aW9ucy52ZXJzaW9uID09PSB1bmRlZmluZWQgfHwgdHlwZW9mIG9wdGlvbnMudmVyc2lvbiA9PT0gJ3N0cmluZycgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zLnZlcnNpb24pLCAnb3B0aW9ucy52ZXJzaW9uIG11c3QgYmUgYSBzdHJpbmcgb3IgYW4gYXJyYXkgb2Ygc3RyaW5nJyk7XG4gICAgbGV0IHZlcnNpb25zID0gb3B0aW9ucy52ZXJzaW9uIHx8IFsnaXB2NCcsICdpcHY2JywgJ2lwdmZ1dHVyZSddO1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh2ZXJzaW9ucykpIHtcbiAgICAgICAgdmVyc2lvbnMgPSBbdmVyc2lvbnNdO1xuICAgIH1cblxuICAgIEFzc2VydCh2ZXJzaW9ucy5sZW5ndGggPj0gMSwgJ29wdGlvbnMudmVyc2lvbiBtdXN0IGhhdmUgYXQgbGVhc3QgMSB2ZXJzaW9uIHNwZWNpZmllZCcpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2ZXJzaW9ucy5sZW5ndGg7ICsraSkge1xuICAgICAgICBBc3NlcnQodHlwZW9mIHZlcnNpb25zW2ldID09PSAnc3RyaW5nJywgJ29wdGlvbnMudmVyc2lvbiBtdXN0IG9ubHkgY29udGFpbiBzdHJpbmdzJyk7XG4gICAgICAgIHZlcnNpb25zW2ldID0gdmVyc2lvbnNbaV0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgQXNzZXJ0KFsnaXB2NCcsICdpcHY2JywgJ2lwdmZ1dHVyZSddLmluY2x1ZGVzKHZlcnNpb25zW2ldKSwgJ29wdGlvbnMudmVyc2lvbiBjb250YWlucyB1bmtub3duIHZlcnNpb24gJyArIHZlcnNpb25zW2ldICsgJyAtIG11c3QgYmUgb25lIG9mIGlwdjQsIGlwdjYsIGlwdmZ1dHVyZScpO1xuICAgIH1cblxuICAgIHZlcnNpb25zID0gQXJyYXkuZnJvbShuZXcgU2V0KHZlcnNpb25zKSk7XG5cbiAgICAvLyBSZWdleFxuXG4gICAgY29uc3QgcGFydHMgPSB2ZXJzaW9ucy5tYXAoKHZlcnNpb24pID0+IHtcblxuICAgICAgICAvLyBGb3JiaWRkZW5cblxuICAgICAgICBpZiAoY2lkciA9PT0gJ2ZvcmJpZGRlbicpIHtcbiAgICAgICAgICAgIHJldHVybiBVcmkuaXBbdmVyc2lvbl07XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZXF1aXJlZFxuXG4gICAgICAgIGNvbnN0IGNpZHJwYXJ0ID0gYFxcXFwvJHt2ZXJzaW9uID09PSAnaXB2NCcgPyBVcmkuaXAudjRDaWRyIDogVXJpLmlwLnY2Q2lkcn1gO1xuXG4gICAgICAgIGlmIChjaWRyID09PSAncmVxdWlyZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7VXJpLmlwW3ZlcnNpb25dfSR7Y2lkcnBhcnR9YDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE9wdGlvbmFsXG5cbiAgICAgICAgcmV0dXJuIGAke1VyaS5pcFt2ZXJzaW9uXX0oPzoke2NpZHJwYXJ0fSk/YDtcbiAgICB9KTtcblxuICAgIGNvbnN0IHJhdyA9IGAoPzoke3BhcnRzLmpvaW4oJ3wnKX0pYDtcbiAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoYF4ke3Jhd30kYCk7XG4gICAgcmV0dXJuIHsgY2lkciwgdmVyc2lvbnMsIHJlZ2V4LCByYXcgfTtcbn07XG4iXSwibmFtZXMiOlsiQXNzZXJ0IiwicmVxdWlyZSIsIlVyaSIsImludGVybmFscyIsImV4cG9ydHMiLCJyZWdleCIsIm9wdGlvbnMiLCJjaWRyIiwidW5kZWZpbmVkIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsInZlcnNpb24iLCJBcnJheSIsImlzQXJyYXkiLCJ2ZXJzaW9ucyIsImxlbmd0aCIsImkiLCJmcm9tIiwiU2V0IiwicGFydHMiLCJtYXAiLCJpcCIsImNpZHJwYXJ0IiwidjRDaWRyIiwidjZDaWRyIiwicmF3Iiwiam9pbiIsIlJlZ0V4cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/ip.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/tlds.js":
/*!***************************************************!*\
  !*** ./node_modules/@sideway/address/lib/tlds.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\nconst internals = {};\n// http://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// # Version 2024012900, Last Updated Mon Jan 29 07:07:01 2024 UTC\ninternals.tlds = [\n    \"AAA\",\n    \"AARP\",\n    \"ABB\",\n    \"ABBOTT\",\n    \"ABBVIE\",\n    \"ABC\",\n    \"ABLE\",\n    \"ABOGADO\",\n    \"ABUDHABI\",\n    \"AC\",\n    \"ACADEMY\",\n    \"ACCENTURE\",\n    \"ACCOUNTANT\",\n    \"ACCOUNTANTS\",\n    \"ACO\",\n    \"ACTOR\",\n    \"AD\",\n    \"ADS\",\n    \"ADULT\",\n    \"AE\",\n    \"AEG\",\n    \"AERO\",\n    \"AETNA\",\n    \"AF\",\n    \"AFL\",\n    \"AFRICA\",\n    \"AG\",\n    \"AGAKHAN\",\n    \"AGENCY\",\n    \"AI\",\n    \"AIG\",\n    \"AIRBUS\",\n    \"AIRFORCE\",\n    \"AIRTEL\",\n    \"AKDN\",\n    \"AL\",\n    \"ALIBABA\",\n    \"ALIPAY\",\n    \"ALLFINANZ\",\n    \"ALLSTATE\",\n    \"ALLY\",\n    \"ALSACE\",\n    \"ALSTOM\",\n    \"AM\",\n    \"AMAZON\",\n    \"AMERICANEXPRESS\",\n    \"AMERICANFAMILY\",\n    \"AMEX\",\n    \"AMFAM\",\n    \"AMICA\",\n    \"AMSTERDAM\",\n    \"ANALYTICS\",\n    \"ANDROID\",\n    \"ANQUAN\",\n    \"ANZ\",\n    \"AO\",\n    \"AOL\",\n    \"APARTMENTS\",\n    \"APP\",\n    \"APPLE\",\n    \"AQ\",\n    \"AQUARELLE\",\n    \"AR\",\n    \"ARAB\",\n    \"ARAMCO\",\n    \"ARCHI\",\n    \"ARMY\",\n    \"ARPA\",\n    \"ART\",\n    \"ARTE\",\n    \"AS\",\n    \"ASDA\",\n    \"ASIA\",\n    \"ASSOCIATES\",\n    \"AT\",\n    \"ATHLETA\",\n    \"ATTORNEY\",\n    \"AU\",\n    \"AUCTION\",\n    \"AUDI\",\n    \"AUDIBLE\",\n    \"AUDIO\",\n    \"AUSPOST\",\n    \"AUTHOR\",\n    \"AUTO\",\n    \"AUTOS\",\n    \"AVIANCA\",\n    \"AW\",\n    \"AWS\",\n    \"AX\",\n    \"AXA\",\n    \"AZ\",\n    \"AZURE\",\n    \"BA\",\n    \"BABY\",\n    \"BAIDU\",\n    \"BANAMEX\",\n    \"BAND\",\n    \"BANK\",\n    \"BAR\",\n    \"BARCELONA\",\n    \"BARCLAYCARD\",\n    \"BARCLAYS\",\n    \"BAREFOOT\",\n    \"BARGAINS\",\n    \"BASEBALL\",\n    \"BASKETBALL\",\n    \"BAUHAUS\",\n    \"BAYERN\",\n    \"BB\",\n    \"BBC\",\n    \"BBT\",\n    \"BBVA\",\n    \"BCG\",\n    \"BCN\",\n    \"BD\",\n    \"BE\",\n    \"BEATS\",\n    \"BEAUTY\",\n    \"BEER\",\n    \"BENTLEY\",\n    \"BERLIN\",\n    \"BEST\",\n    \"BESTBUY\",\n    \"BET\",\n    \"BF\",\n    \"BG\",\n    \"BH\",\n    \"BHARTI\",\n    \"BI\",\n    \"BIBLE\",\n    \"BID\",\n    \"BIKE\",\n    \"BING\",\n    \"BINGO\",\n    \"BIO\",\n    \"BIZ\",\n    \"BJ\",\n    \"BLACK\",\n    \"BLACKFRIDAY\",\n    \"BLOCKBUSTER\",\n    \"BLOG\",\n    \"BLOOMBERG\",\n    \"BLUE\",\n    \"BM\",\n    \"BMS\",\n    \"BMW\",\n    \"BN\",\n    \"BNPPARIBAS\",\n    \"BO\",\n    \"BOATS\",\n    \"BOEHRINGER\",\n    \"BOFA\",\n    \"BOM\",\n    \"BOND\",\n    \"BOO\",\n    \"BOOK\",\n    \"BOOKING\",\n    \"BOSCH\",\n    \"BOSTIK\",\n    \"BOSTON\",\n    \"BOT\",\n    \"BOUTIQUE\",\n    \"BOX\",\n    \"BR\",\n    \"BRADESCO\",\n    \"BRIDGESTONE\",\n    \"BROADWAY\",\n    \"BROKER\",\n    \"BROTHER\",\n    \"BRUSSELS\",\n    \"BS\",\n    \"BT\",\n    \"BUILD\",\n    \"BUILDERS\",\n    \"BUSINESS\",\n    \"BUY\",\n    \"BUZZ\",\n    \"BV\",\n    \"BW\",\n    \"BY\",\n    \"BZ\",\n    \"BZH\",\n    \"CA\",\n    \"CAB\",\n    \"CAFE\",\n    \"CAL\",\n    \"CALL\",\n    \"CALVINKLEIN\",\n    \"CAM\",\n    \"CAMERA\",\n    \"CAMP\",\n    \"CANON\",\n    \"CAPETOWN\",\n    \"CAPITAL\",\n    \"CAPITALONE\",\n    \"CAR\",\n    \"CARAVAN\",\n    \"CARDS\",\n    \"CARE\",\n    \"CAREER\",\n    \"CAREERS\",\n    \"CARS\",\n    \"CASA\",\n    \"CASE\",\n    \"CASH\",\n    \"CASINO\",\n    \"CAT\",\n    \"CATERING\",\n    \"CATHOLIC\",\n    \"CBA\",\n    \"CBN\",\n    \"CBRE\",\n    \"CC\",\n    \"CD\",\n    \"CENTER\",\n    \"CEO\",\n    \"CERN\",\n    \"CF\",\n    \"CFA\",\n    \"CFD\",\n    \"CG\",\n    \"CH\",\n    \"CHANEL\",\n    \"CHANNEL\",\n    \"CHARITY\",\n    \"CHASE\",\n    \"CHAT\",\n    \"CHEAP\",\n    \"CHINTAI\",\n    \"CHRISTMAS\",\n    \"CHROME\",\n    \"CHURCH\",\n    \"CI\",\n    \"CIPRIANI\",\n    \"CIRCLE\",\n    \"CISCO\",\n    \"CITADEL\",\n    \"CITI\",\n    \"CITIC\",\n    \"CITY\",\n    \"CK\",\n    \"CL\",\n    \"CLAIMS\",\n    \"CLEANING\",\n    \"CLICK\",\n    \"CLINIC\",\n    \"CLINIQUE\",\n    \"CLOTHING\",\n    \"CLOUD\",\n    \"CLUB\",\n    \"CLUBMED\",\n    \"CM\",\n    \"CN\",\n    \"CO\",\n    \"COACH\",\n    \"CODES\",\n    \"COFFEE\",\n    \"COLLEGE\",\n    \"COLOGNE\",\n    \"COM\",\n    \"COMCAST\",\n    \"COMMBANK\",\n    \"COMMUNITY\",\n    \"COMPANY\",\n    \"COMPARE\",\n    \"COMPUTER\",\n    \"COMSEC\",\n    \"CONDOS\",\n    \"CONSTRUCTION\",\n    \"CONSULTING\",\n    \"CONTACT\",\n    \"CONTRACTORS\",\n    \"COOKING\",\n    \"COOL\",\n    \"COOP\",\n    \"CORSICA\",\n    \"COUNTRY\",\n    \"COUPON\",\n    \"COUPONS\",\n    \"COURSES\",\n    \"CPA\",\n    \"CR\",\n    \"CREDIT\",\n    \"CREDITCARD\",\n    \"CREDITUNION\",\n    \"CRICKET\",\n    \"CROWN\",\n    \"CRS\",\n    \"CRUISE\",\n    \"CRUISES\",\n    \"CU\",\n    \"CUISINELLA\",\n    \"CV\",\n    \"CW\",\n    \"CX\",\n    \"CY\",\n    \"CYMRU\",\n    \"CYOU\",\n    \"CZ\",\n    \"DABUR\",\n    \"DAD\",\n    \"DANCE\",\n    \"DATA\",\n    \"DATE\",\n    \"DATING\",\n    \"DATSUN\",\n    \"DAY\",\n    \"DCLK\",\n    \"DDS\",\n    \"DE\",\n    \"DEAL\",\n    \"DEALER\",\n    \"DEALS\",\n    \"DEGREE\",\n    \"DELIVERY\",\n    \"DELL\",\n    \"DELOITTE\",\n    \"DELTA\",\n    \"DEMOCRAT\",\n    \"DENTAL\",\n    \"DENTIST\",\n    \"DESI\",\n    \"DESIGN\",\n    \"DEV\",\n    \"DHL\",\n    \"DIAMONDS\",\n    \"DIET\",\n    \"DIGITAL\",\n    \"DIRECT\",\n    \"DIRECTORY\",\n    \"DISCOUNT\",\n    \"DISCOVER\",\n    \"DISH\",\n    \"DIY\",\n    \"DJ\",\n    \"DK\",\n    \"DM\",\n    \"DNP\",\n    \"DO\",\n    \"DOCS\",\n    \"DOCTOR\",\n    \"DOG\",\n    \"DOMAINS\",\n    \"DOT\",\n    \"DOWNLOAD\",\n    \"DRIVE\",\n    \"DTV\",\n    \"DUBAI\",\n    \"DUNLOP\",\n    \"DUPONT\",\n    \"DURBAN\",\n    \"DVAG\",\n    \"DVR\",\n    \"DZ\",\n    \"EARTH\",\n    \"EAT\",\n    \"EC\",\n    \"ECO\",\n    \"EDEKA\",\n    \"EDU\",\n    \"EDUCATION\",\n    \"EE\",\n    \"EG\",\n    \"EMAIL\",\n    \"EMERCK\",\n    \"ENERGY\",\n    \"ENGINEER\",\n    \"ENGINEERING\",\n    \"ENTERPRISES\",\n    \"EPSON\",\n    \"EQUIPMENT\",\n    \"ER\",\n    \"ERICSSON\",\n    \"ERNI\",\n    \"ES\",\n    \"ESQ\",\n    \"ESTATE\",\n    \"ET\",\n    \"EU\",\n    \"EUROVISION\",\n    \"EUS\",\n    \"EVENTS\",\n    \"EXCHANGE\",\n    \"EXPERT\",\n    \"EXPOSED\",\n    \"EXPRESS\",\n    \"EXTRASPACE\",\n    \"FAGE\",\n    \"FAIL\",\n    \"FAIRWINDS\",\n    \"FAITH\",\n    \"FAMILY\",\n    \"FAN\",\n    \"FANS\",\n    \"FARM\",\n    \"FARMERS\",\n    \"FASHION\",\n    \"FAST\",\n    \"FEDEX\",\n    \"FEEDBACK\",\n    \"FERRARI\",\n    \"FERRERO\",\n    \"FI\",\n    \"FIDELITY\",\n    \"FIDO\",\n    \"FILM\",\n    \"FINAL\",\n    \"FINANCE\",\n    \"FINANCIAL\",\n    \"FIRE\",\n    \"FIRESTONE\",\n    \"FIRMDALE\",\n    \"FISH\",\n    \"FISHING\",\n    \"FIT\",\n    \"FITNESS\",\n    \"FJ\",\n    \"FK\",\n    \"FLICKR\",\n    \"FLIGHTS\",\n    \"FLIR\",\n    \"FLORIST\",\n    \"FLOWERS\",\n    \"FLY\",\n    \"FM\",\n    \"FO\",\n    \"FOO\",\n    \"FOOD\",\n    \"FOOTBALL\",\n    \"FORD\",\n    \"FOREX\",\n    \"FORSALE\",\n    \"FORUM\",\n    \"FOUNDATION\",\n    \"FOX\",\n    \"FR\",\n    \"FREE\",\n    \"FRESENIUS\",\n    \"FRL\",\n    \"FROGANS\",\n    \"FRONTIER\",\n    \"FTR\",\n    \"FUJITSU\",\n    \"FUN\",\n    \"FUND\",\n    \"FURNITURE\",\n    \"FUTBOL\",\n    \"FYI\",\n    \"GA\",\n    \"GAL\",\n    \"GALLERY\",\n    \"GALLO\",\n    \"GALLUP\",\n    \"GAME\",\n    \"GAMES\",\n    \"GAP\",\n    \"GARDEN\",\n    \"GAY\",\n    \"GB\",\n    \"GBIZ\",\n    \"GD\",\n    \"GDN\",\n    \"GE\",\n    \"GEA\",\n    \"GENT\",\n    \"GENTING\",\n    \"GEORGE\",\n    \"GF\",\n    \"GG\",\n    \"GGEE\",\n    \"GH\",\n    \"GI\",\n    \"GIFT\",\n    \"GIFTS\",\n    \"GIVES\",\n    \"GIVING\",\n    \"GL\",\n    \"GLASS\",\n    \"GLE\",\n    \"GLOBAL\",\n    \"GLOBO\",\n    \"GM\",\n    \"GMAIL\",\n    \"GMBH\",\n    \"GMO\",\n    \"GMX\",\n    \"GN\",\n    \"GODADDY\",\n    \"GOLD\",\n    \"GOLDPOINT\",\n    \"GOLF\",\n    \"GOO\",\n    \"GOODYEAR\",\n    \"GOOG\",\n    \"GOOGLE\",\n    \"GOP\",\n    \"GOT\",\n    \"GOV\",\n    \"GP\",\n    \"GQ\",\n    \"GR\",\n    \"GRAINGER\",\n    \"GRAPHICS\",\n    \"GRATIS\",\n    \"GREEN\",\n    \"GRIPE\",\n    \"GROCERY\",\n    \"GROUP\",\n    \"GS\",\n    \"GT\",\n    \"GU\",\n    \"GUARDIAN\",\n    \"GUCCI\",\n    \"GUGE\",\n    \"GUIDE\",\n    \"GUITARS\",\n    \"GURU\",\n    \"GW\",\n    \"GY\",\n    \"HAIR\",\n    \"HAMBURG\",\n    \"HANGOUT\",\n    \"HAUS\",\n    \"HBO\",\n    \"HDFC\",\n    \"HDFCBANK\",\n    \"HEALTH\",\n    \"HEALTHCARE\",\n    \"HELP\",\n    \"HELSINKI\",\n    \"HERE\",\n    \"HERMES\",\n    \"HIPHOP\",\n    \"HISAMITSU\",\n    \"HITACHI\",\n    \"HIV\",\n    \"HK\",\n    \"HKT\",\n    \"HM\",\n    \"HN\",\n    \"HOCKEY\",\n    \"HOLDINGS\",\n    \"HOLIDAY\",\n    \"HOMEDEPOT\",\n    \"HOMEGOODS\",\n    \"HOMES\",\n    \"HOMESENSE\",\n    \"HONDA\",\n    \"HORSE\",\n    \"HOSPITAL\",\n    \"HOST\",\n    \"HOSTING\",\n    \"HOT\",\n    \"HOTELS\",\n    \"HOTMAIL\",\n    \"HOUSE\",\n    \"HOW\",\n    \"HR\",\n    \"HSBC\",\n    \"HT\",\n    \"HU\",\n    \"HUGHES\",\n    \"HYATT\",\n    \"HYUNDAI\",\n    \"IBM\",\n    \"ICBC\",\n    \"ICE\",\n    \"ICU\",\n    \"ID\",\n    \"IE\",\n    \"IEEE\",\n    \"IFM\",\n    \"IKANO\",\n    \"IL\",\n    \"IM\",\n    \"IMAMAT\",\n    \"IMDB\",\n    \"IMMO\",\n    \"IMMOBILIEN\",\n    \"IN\",\n    \"INC\",\n    \"INDUSTRIES\",\n    \"INFINITI\",\n    \"INFO\",\n    \"ING\",\n    \"INK\",\n    \"INSTITUTE\",\n    \"INSURANCE\",\n    \"INSURE\",\n    \"INT\",\n    \"INTERNATIONAL\",\n    \"INTUIT\",\n    \"INVESTMENTS\",\n    \"IO\",\n    \"IPIRANGA\",\n    \"IQ\",\n    \"IR\",\n    \"IRISH\",\n    \"IS\",\n    \"ISMAILI\",\n    \"IST\",\n    \"ISTANBUL\",\n    \"IT\",\n    \"ITAU\",\n    \"ITV\",\n    \"JAGUAR\",\n    \"JAVA\",\n    \"JCB\",\n    \"JE\",\n    \"JEEP\",\n    \"JETZT\",\n    \"JEWELRY\",\n    \"JIO\",\n    \"JLL\",\n    \"JM\",\n    \"JMP\",\n    \"JNJ\",\n    \"JO\",\n    \"JOBS\",\n    \"JOBURG\",\n    \"JOT\",\n    \"JOY\",\n    \"JP\",\n    \"JPMORGAN\",\n    \"JPRS\",\n    \"JUEGOS\",\n    \"JUNIPER\",\n    \"KAUFEN\",\n    \"KDDI\",\n    \"KE\",\n    \"KERRYHOTELS\",\n    \"KERRYLOGISTICS\",\n    \"KERRYPROPERTIES\",\n    \"KFH\",\n    \"KG\",\n    \"KH\",\n    \"KI\",\n    \"KIA\",\n    \"KIDS\",\n    \"KIM\",\n    \"KINDLE\",\n    \"KITCHEN\",\n    \"KIWI\",\n    \"KM\",\n    \"KN\",\n    \"KOELN\",\n    \"KOMATSU\",\n    \"KOSHER\",\n    \"KP\",\n    \"KPMG\",\n    \"KPN\",\n    \"KR\",\n    \"KRD\",\n    \"KRED\",\n    \"KUOKGROUP\",\n    \"KW\",\n    \"KY\",\n    \"KYOTO\",\n    \"KZ\",\n    \"LA\",\n    \"LACAIXA\",\n    \"LAMBORGHINI\",\n    \"LAMER\",\n    \"LANCASTER\",\n    \"LAND\",\n    \"LANDROVER\",\n    \"LANXESS\",\n    \"LASALLE\",\n    \"LAT\",\n    \"LATINO\",\n    \"LATROBE\",\n    \"LAW\",\n    \"LAWYER\",\n    \"LB\",\n    \"LC\",\n    \"LDS\",\n    \"LEASE\",\n    \"LECLERC\",\n    \"LEFRAK\",\n    \"LEGAL\",\n    \"LEGO\",\n    \"LEXUS\",\n    \"LGBT\",\n    \"LI\",\n    \"LIDL\",\n    \"LIFE\",\n    \"LIFEINSURANCE\",\n    \"LIFESTYLE\",\n    \"LIGHTING\",\n    \"LIKE\",\n    \"LILLY\",\n    \"LIMITED\",\n    \"LIMO\",\n    \"LINCOLN\",\n    \"LINK\",\n    \"LIPSY\",\n    \"LIVE\",\n    \"LIVING\",\n    \"LK\",\n    \"LLC\",\n    \"LLP\",\n    \"LOAN\",\n    \"LOANS\",\n    \"LOCKER\",\n    \"LOCUS\",\n    \"LOL\",\n    \"LONDON\",\n    \"LOTTE\",\n    \"LOTTO\",\n    \"LOVE\",\n    \"LPL\",\n    \"LPLFINANCIAL\",\n    \"LR\",\n    \"LS\",\n    \"LT\",\n    \"LTD\",\n    \"LTDA\",\n    \"LU\",\n    \"LUNDBECK\",\n    \"LUXE\",\n    \"LUXURY\",\n    \"LV\",\n    \"LY\",\n    \"MA\",\n    \"MADRID\",\n    \"MAIF\",\n    \"MAISON\",\n    \"MAKEUP\",\n    \"MAN\",\n    \"MANAGEMENT\",\n    \"MANGO\",\n    \"MAP\",\n    \"MARKET\",\n    \"MARKETING\",\n    \"MARKETS\",\n    \"MARRIOTT\",\n    \"MARSHALLS\",\n    \"MATTEL\",\n    \"MBA\",\n    \"MC\",\n    \"MCKINSEY\",\n    \"MD\",\n    \"ME\",\n    \"MED\",\n    \"MEDIA\",\n    \"MEET\",\n    \"MELBOURNE\",\n    \"MEME\",\n    \"MEMORIAL\",\n    \"MEN\",\n    \"MENU\",\n    \"MERCKMSD\",\n    \"MG\",\n    \"MH\",\n    \"MIAMI\",\n    \"MICROSOFT\",\n    \"MIL\",\n    \"MINI\",\n    \"MINT\",\n    \"MIT\",\n    \"MITSUBISHI\",\n    \"MK\",\n    \"ML\",\n    \"MLB\",\n    \"MLS\",\n    \"MM\",\n    \"MMA\",\n    \"MN\",\n    \"MO\",\n    \"MOBI\",\n    \"MOBILE\",\n    \"MODA\",\n    \"MOE\",\n    \"MOI\",\n    \"MOM\",\n    \"MONASH\",\n    \"MONEY\",\n    \"MONSTER\",\n    \"MORMON\",\n    \"MORTGAGE\",\n    \"MOSCOW\",\n    \"MOTO\",\n    \"MOTORCYCLES\",\n    \"MOV\",\n    \"MOVIE\",\n    \"MP\",\n    \"MQ\",\n    \"MR\",\n    \"MS\",\n    \"MSD\",\n    \"MT\",\n    \"MTN\",\n    \"MTR\",\n    \"MU\",\n    \"MUSEUM\",\n    \"MUSIC\",\n    \"MV\",\n    \"MW\",\n    \"MX\",\n    \"MY\",\n    \"MZ\",\n    \"NA\",\n    \"NAB\",\n    \"NAGOYA\",\n    \"NAME\",\n    \"NATURA\",\n    \"NAVY\",\n    \"NBA\",\n    \"NC\",\n    \"NE\",\n    \"NEC\",\n    \"NET\",\n    \"NETBANK\",\n    \"NETFLIX\",\n    \"NETWORK\",\n    \"NEUSTAR\",\n    \"NEW\",\n    \"NEWS\",\n    \"NEXT\",\n    \"NEXTDIRECT\",\n    \"NEXUS\",\n    \"NF\",\n    \"NFL\",\n    \"NG\",\n    \"NGO\",\n    \"NHK\",\n    \"NI\",\n    \"NICO\",\n    \"NIKE\",\n    \"NIKON\",\n    \"NINJA\",\n    \"NISSAN\",\n    \"NISSAY\",\n    \"NL\",\n    \"NO\",\n    \"NOKIA\",\n    \"NORTON\",\n    \"NOW\",\n    \"NOWRUZ\",\n    \"NOWTV\",\n    \"NP\",\n    \"NR\",\n    \"NRA\",\n    \"NRW\",\n    \"NTT\",\n    \"NU\",\n    \"NYC\",\n    \"NZ\",\n    \"OBI\",\n    \"OBSERVER\",\n    \"OFFICE\",\n    \"OKINAWA\",\n    \"OLAYAN\",\n    \"OLAYANGROUP\",\n    \"OLLO\",\n    \"OM\",\n    \"OMEGA\",\n    \"ONE\",\n    \"ONG\",\n    \"ONL\",\n    \"ONLINE\",\n    \"OOO\",\n    \"OPEN\",\n    \"ORACLE\",\n    \"ORANGE\",\n    \"ORG\",\n    \"ORGANIC\",\n    \"ORIGINS\",\n    \"OSAKA\",\n    \"OTSUKA\",\n    \"OTT\",\n    \"OVH\",\n    \"PA\",\n    \"PAGE\",\n    \"PANASONIC\",\n    \"PARIS\",\n    \"PARS\",\n    \"PARTNERS\",\n    \"PARTS\",\n    \"PARTY\",\n    \"PAY\",\n    \"PCCW\",\n    \"PE\",\n    \"PET\",\n    \"PF\",\n    \"PFIZER\",\n    \"PG\",\n    \"PH\",\n    \"PHARMACY\",\n    \"PHD\",\n    \"PHILIPS\",\n    \"PHONE\",\n    \"PHOTO\",\n    \"PHOTOGRAPHY\",\n    \"PHOTOS\",\n    \"PHYSIO\",\n    \"PICS\",\n    \"PICTET\",\n    \"PICTURES\",\n    \"PID\",\n    \"PIN\",\n    \"PING\",\n    \"PINK\",\n    \"PIONEER\",\n    \"PIZZA\",\n    \"PK\",\n    \"PL\",\n    \"PLACE\",\n    \"PLAY\",\n    \"PLAYSTATION\",\n    \"PLUMBING\",\n    \"PLUS\",\n    \"PM\",\n    \"PN\",\n    \"PNC\",\n    \"POHL\",\n    \"POKER\",\n    \"POLITIE\",\n    \"PORN\",\n    \"POST\",\n    \"PR\",\n    \"PRAMERICA\",\n    \"PRAXI\",\n    \"PRESS\",\n    \"PRIME\",\n    \"PRO\",\n    \"PROD\",\n    \"PRODUCTIONS\",\n    \"PROF\",\n    \"PROGRESSIVE\",\n    \"PROMO\",\n    \"PROPERTIES\",\n    \"PROPERTY\",\n    \"PROTECTION\",\n    \"PRU\",\n    \"PRUDENTIAL\",\n    \"PS\",\n    \"PT\",\n    \"PUB\",\n    \"PW\",\n    \"PWC\",\n    \"PY\",\n    \"QA\",\n    \"QPON\",\n    \"QUEBEC\",\n    \"QUEST\",\n    \"RACING\",\n    \"RADIO\",\n    \"RE\",\n    \"READ\",\n    \"REALESTATE\",\n    \"REALTOR\",\n    \"REALTY\",\n    \"RECIPES\",\n    \"RED\",\n    \"REDSTONE\",\n    \"REDUMBRELLA\",\n    \"REHAB\",\n    \"REISE\",\n    \"REISEN\",\n    \"REIT\",\n    \"RELIANCE\",\n    \"REN\",\n    \"RENT\",\n    \"RENTALS\",\n    \"REPAIR\",\n    \"REPORT\",\n    \"REPUBLICAN\",\n    \"REST\",\n    \"RESTAURANT\",\n    \"REVIEW\",\n    \"REVIEWS\",\n    \"REXROTH\",\n    \"RICH\",\n    \"RICHARDLI\",\n    \"RICOH\",\n    \"RIL\",\n    \"RIO\",\n    \"RIP\",\n    \"RO\",\n    \"ROCKS\",\n    \"RODEO\",\n    \"ROGERS\",\n    \"ROOM\",\n    \"RS\",\n    \"RSVP\",\n    \"RU\",\n    \"RUGBY\",\n    \"RUHR\",\n    \"RUN\",\n    \"RW\",\n    \"RWE\",\n    \"RYUKYU\",\n    \"SA\",\n    \"SAARLAND\",\n    \"SAFE\",\n    \"SAFETY\",\n    \"SAKURA\",\n    \"SALE\",\n    \"SALON\",\n    \"SAMSCLUB\",\n    \"SAMSUNG\",\n    \"SANDVIK\",\n    \"SANDVIKCOROMANT\",\n    \"SANOFI\",\n    \"SAP\",\n    \"SARL\",\n    \"SAS\",\n    \"SAVE\",\n    \"SAXO\",\n    \"SB\",\n    \"SBI\",\n    \"SBS\",\n    \"SC\",\n    \"SCB\",\n    \"SCHAEFFLER\",\n    \"SCHMIDT\",\n    \"SCHOLARSHIPS\",\n    \"SCHOOL\",\n    \"SCHULE\",\n    \"SCHWARZ\",\n    \"SCIENCE\",\n    \"SCOT\",\n    \"SD\",\n    \"SE\",\n    \"SEARCH\",\n    \"SEAT\",\n    \"SECURE\",\n    \"SECURITY\",\n    \"SEEK\",\n    \"SELECT\",\n    \"SENER\",\n    \"SERVICES\",\n    \"SEVEN\",\n    \"SEW\",\n    \"SEX\",\n    \"SEXY\",\n    \"SFR\",\n    \"SG\",\n    \"SH\",\n    \"SHANGRILA\",\n    \"SHARP\",\n    \"SHAW\",\n    \"SHELL\",\n    \"SHIA\",\n    \"SHIKSHA\",\n    \"SHOES\",\n    \"SHOP\",\n    \"SHOPPING\",\n    \"SHOUJI\",\n    \"SHOW\",\n    \"SI\",\n    \"SILK\",\n    \"SINA\",\n    \"SINGLES\",\n    \"SITE\",\n    \"SJ\",\n    \"SK\",\n    \"SKI\",\n    \"SKIN\",\n    \"SKY\",\n    \"SKYPE\",\n    \"SL\",\n    \"SLING\",\n    \"SM\",\n    \"SMART\",\n    \"SMILE\",\n    \"SN\",\n    \"SNCF\",\n    \"SO\",\n    \"SOCCER\",\n    \"SOCIAL\",\n    \"SOFTBANK\",\n    \"SOFTWARE\",\n    \"SOHU\",\n    \"SOLAR\",\n    \"SOLUTIONS\",\n    \"SONG\",\n    \"SONY\",\n    \"SOY\",\n    \"SPA\",\n    \"SPACE\",\n    \"SPORT\",\n    \"SPOT\",\n    \"SR\",\n    \"SRL\",\n    \"SS\",\n    \"ST\",\n    \"STADA\",\n    \"STAPLES\",\n    \"STAR\",\n    \"STATEBANK\",\n    \"STATEFARM\",\n    \"STC\",\n    \"STCGROUP\",\n    \"STOCKHOLM\",\n    \"STORAGE\",\n    \"STORE\",\n    \"STREAM\",\n    \"STUDIO\",\n    \"STUDY\",\n    \"STYLE\",\n    \"SU\",\n    \"SUCKS\",\n    \"SUPPLIES\",\n    \"SUPPLY\",\n    \"SUPPORT\",\n    \"SURF\",\n    \"SURGERY\",\n    \"SUZUKI\",\n    \"SV\",\n    \"SWATCH\",\n    \"SWISS\",\n    \"SX\",\n    \"SY\",\n    \"SYDNEY\",\n    \"SYSTEMS\",\n    \"SZ\",\n    \"TAB\",\n    \"TAIPEI\",\n    \"TALK\",\n    \"TAOBAO\",\n    \"TARGET\",\n    \"TATAMOTORS\",\n    \"TATAR\",\n    \"TATTOO\",\n    \"TAX\",\n    \"TAXI\",\n    \"TC\",\n    \"TCI\",\n    \"TD\",\n    \"TDK\",\n    \"TEAM\",\n    \"TECH\",\n    \"TECHNOLOGY\",\n    \"TEL\",\n    \"TEMASEK\",\n    \"TENNIS\",\n    \"TEVA\",\n    \"TF\",\n    \"TG\",\n    \"TH\",\n    \"THD\",\n    \"THEATER\",\n    \"THEATRE\",\n    \"TIAA\",\n    \"TICKETS\",\n    \"TIENDA\",\n    \"TIPS\",\n    \"TIRES\",\n    \"TIROL\",\n    \"TJ\",\n    \"TJMAXX\",\n    \"TJX\",\n    \"TK\",\n    \"TKMAXX\",\n    \"TL\",\n    \"TM\",\n    \"TMALL\",\n    \"TN\",\n    \"TO\",\n    \"TODAY\",\n    \"TOKYO\",\n    \"TOOLS\",\n    \"TOP\",\n    \"TORAY\",\n    \"TOSHIBA\",\n    \"TOTAL\",\n    \"TOURS\",\n    \"TOWN\",\n    \"TOYOTA\",\n    \"TOYS\",\n    \"TR\",\n    \"TRADE\",\n    \"TRADING\",\n    \"TRAINING\",\n    \"TRAVEL\",\n    \"TRAVELERS\",\n    \"TRAVELERSINSURANCE\",\n    \"TRUST\",\n    \"TRV\",\n    \"TT\",\n    \"TUBE\",\n    \"TUI\",\n    \"TUNES\",\n    \"TUSHU\",\n    \"TV\",\n    \"TVS\",\n    \"TW\",\n    \"TZ\",\n    \"UA\",\n    \"UBANK\",\n    \"UBS\",\n    \"UG\",\n    \"UK\",\n    \"UNICOM\",\n    \"UNIVERSITY\",\n    \"UNO\",\n    \"UOL\",\n    \"UPS\",\n    \"US\",\n    \"UY\",\n    \"UZ\",\n    \"VA\",\n    \"VACATIONS\",\n    \"VANA\",\n    \"VANGUARD\",\n    \"VC\",\n    \"VE\",\n    \"VEGAS\",\n    \"VENTURES\",\n    \"VERISIGN\",\n    \"VERSICHERUNG\",\n    \"VET\",\n    \"VG\",\n    \"VI\",\n    \"VIAJES\",\n    \"VIDEO\",\n    \"VIG\",\n    \"VIKING\",\n    \"VILLAS\",\n    \"VIN\",\n    \"VIP\",\n    \"VIRGIN\",\n    \"VISA\",\n    \"VISION\",\n    \"VIVA\",\n    \"VIVO\",\n    \"VLAANDEREN\",\n    \"VN\",\n    \"VODKA\",\n    \"VOLVO\",\n    \"VOTE\",\n    \"VOTING\",\n    \"VOTO\",\n    \"VOYAGE\",\n    \"VU\",\n    \"WALES\",\n    \"WALMART\",\n    \"WALTER\",\n    \"WANG\",\n    \"WANGGOU\",\n    \"WATCH\",\n    \"WATCHES\",\n    \"WEATHER\",\n    \"WEATHERCHANNEL\",\n    \"WEBCAM\",\n    \"WEBER\",\n    \"WEBSITE\",\n    \"WED\",\n    \"WEDDING\",\n    \"WEIBO\",\n    \"WEIR\",\n    \"WF\",\n    \"WHOSWHO\",\n    \"WIEN\",\n    \"WIKI\",\n    \"WILLIAMHILL\",\n    \"WIN\",\n    \"WINDOWS\",\n    \"WINE\",\n    \"WINNERS\",\n    \"WME\",\n    \"WOLTERSKLUWER\",\n    \"WOODSIDE\",\n    \"WORK\",\n    \"WORKS\",\n    \"WORLD\",\n    \"WOW\",\n    \"WS\",\n    \"WTC\",\n    \"WTF\",\n    \"XBOX\",\n    \"XEROX\",\n    \"XFINITY\",\n    \"XIHUAN\",\n    \"XIN\",\n    \"XN--11B4C3D\",\n    \"XN--1CK2E1B\",\n    \"XN--1QQW23A\",\n    \"XN--2SCRJ9C\",\n    \"XN--30RR7Y\",\n    \"XN--3BST00M\",\n    \"XN--3DS443G\",\n    \"XN--3E0B707E\",\n    \"XN--3HCRJ9C\",\n    \"XN--3PXU8K\",\n    \"XN--42C2D9A\",\n    \"XN--45BR5CYL\",\n    \"XN--45BRJ9C\",\n    \"XN--45Q11C\",\n    \"XN--4DBRK0CE\",\n    \"XN--4GBRIM\",\n    \"XN--54B7FTA0CC\",\n    \"XN--55QW42G\",\n    \"XN--55QX5D\",\n    \"XN--5SU34J936BGSG\",\n    \"XN--5TZM5G\",\n    \"XN--6FRZ82G\",\n    \"XN--6QQ986B3XL\",\n    \"XN--80ADXHKS\",\n    \"XN--80AO21A\",\n    \"XN--80AQECDR1A\",\n    \"XN--80ASEHDB\",\n    \"XN--80ASWG\",\n    \"XN--8Y0A063A\",\n    \"XN--90A3AC\",\n    \"XN--90AE\",\n    \"XN--90AIS\",\n    \"XN--9DBQ2A\",\n    \"XN--9ET52U\",\n    \"XN--9KRT00A\",\n    \"XN--B4W605FERD\",\n    \"XN--BCK1B9A5DRE4C\",\n    \"XN--C1AVG\",\n    \"XN--C2BR7G\",\n    \"XN--CCK2B3B\",\n    \"XN--CCKWCXETD\",\n    \"XN--CG4BKI\",\n    \"XN--CLCHC0EA0B2G2A9GCD\",\n    \"XN--CZR694B\",\n    \"XN--CZRS0T\",\n    \"XN--CZRU2D\",\n    \"XN--D1ACJ3B\",\n    \"XN--D1ALF\",\n    \"XN--E1A4C\",\n    \"XN--ECKVDTC9D\",\n    \"XN--EFVY88H\",\n    \"XN--FCT429K\",\n    \"XN--FHBEI\",\n    \"XN--FIQ228C5HS\",\n    \"XN--FIQ64B\",\n    \"XN--FIQS8S\",\n    \"XN--FIQZ9S\",\n    \"XN--FJQ720A\",\n    \"XN--FLW351E\",\n    \"XN--FPCRJ9C3D\",\n    \"XN--FZC2C9E2C\",\n    \"XN--FZYS8D69UVGM\",\n    \"XN--G2XX48C\",\n    \"XN--GCKR3F0F\",\n    \"XN--GECRJ9C\",\n    \"XN--GK3AT1E\",\n    \"XN--H2BREG3EVE\",\n    \"XN--H2BRJ9C\",\n    \"XN--H2BRJ9C8C\",\n    \"XN--HXT814E\",\n    \"XN--I1B6B1A6A2E\",\n    \"XN--IMR513N\",\n    \"XN--IO0A7I\",\n    \"XN--J1AEF\",\n    \"XN--J1AMH\",\n    \"XN--J6W193G\",\n    \"XN--JLQ480N2RG\",\n    \"XN--JVR189M\",\n    \"XN--KCRX77D1X4A\",\n    \"XN--KPRW13D\",\n    \"XN--KPRY57D\",\n    \"XN--KPUT3I\",\n    \"XN--L1ACC\",\n    \"XN--LGBBAT1AD8J\",\n    \"XN--MGB9AWBF\",\n    \"XN--MGBA3A3EJT\",\n    \"XN--MGBA3A4F16A\",\n    \"XN--MGBA7C0BBN0A\",\n    \"XN--MGBAAM7A8H\",\n    \"XN--MGBAB2BD\",\n    \"XN--MGBAH1A3HJKRD\",\n    \"XN--MGBAI9AZGQP6J\",\n    \"XN--MGBAYH7GPA\",\n    \"XN--MGBBH1A\",\n    \"XN--MGBBH1A71E\",\n    \"XN--MGBC0A9AZCG\",\n    \"XN--MGBCA7DZDO\",\n    \"XN--MGBCPQ6GPA1A\",\n    \"XN--MGBERP4A5D4AR\",\n    \"XN--MGBGU82A\",\n    \"XN--MGBI4ECEXP\",\n    \"XN--MGBPL2FH\",\n    \"XN--MGBT3DHD\",\n    \"XN--MGBTX2B\",\n    \"XN--MGBX4CD0AB\",\n    \"XN--MIX891F\",\n    \"XN--MK1BU44C\",\n    \"XN--MXTQ1M\",\n    \"XN--NGBC5AZD\",\n    \"XN--NGBE9E0A\",\n    \"XN--NGBRX\",\n    \"XN--NODE\",\n    \"XN--NQV7F\",\n    \"XN--NQV7FS00EMA\",\n    \"XN--NYQY26A\",\n    \"XN--O3CW4H\",\n    \"XN--OGBPF8FL\",\n    \"XN--OTU796D\",\n    \"XN--P1ACF\",\n    \"XN--P1AI\",\n    \"XN--PGBS0DH\",\n    \"XN--PSSY2U\",\n    \"XN--Q7CE6A\",\n    \"XN--Q9JYB4C\",\n    \"XN--QCKA1PMC\",\n    \"XN--QXA6A\",\n    \"XN--QXAM\",\n    \"XN--RHQV96G\",\n    \"XN--ROVU88B\",\n    \"XN--RVC1E0AM3E\",\n    \"XN--S9BRJ9C\",\n    \"XN--SES554G\",\n    \"XN--T60B56A\",\n    \"XN--TCKWE\",\n    \"XN--TIQ49XQYJ\",\n    \"XN--UNUP4Y\",\n    \"XN--VERMGENSBERATER-CTB\",\n    \"XN--VERMGENSBERATUNG-PWB\",\n    \"XN--VHQUV\",\n    \"XN--VUQ861B\",\n    \"XN--W4R85EL8FHU5DNRA\",\n    \"XN--W4RS40L\",\n    \"XN--WGBH1C\",\n    \"XN--WGBL6A\",\n    \"XN--XHQ521B\",\n    \"XN--XKC2AL3HYE2A\",\n    \"XN--XKC2DL3A5EE0H\",\n    \"XN--Y9A3AQ\",\n    \"XN--YFRO4I67O\",\n    \"XN--YGBI2AMMX\",\n    \"XN--ZFR164B\",\n    \"XXX\",\n    \"XYZ\",\n    \"YACHTS\",\n    \"YAHOO\",\n    \"YAMAXUN\",\n    \"YANDEX\",\n    \"YE\",\n    \"YODOBASHI\",\n    \"YOGA\",\n    \"YOKOHAMA\",\n    \"YOU\",\n    \"YOUTUBE\",\n    \"YT\",\n    \"YUN\",\n    \"ZA\",\n    \"ZAPPOS\",\n    \"ZARA\",\n    \"ZERO\",\n    \"ZIP\",\n    \"ZM\",\n    \"ZONE\",\n    \"ZUERICH\",\n    \"ZW\"\n];\n// Keep as upper-case to make updating from source easier\nmodule.exports = new Set(internals.tlds.map((tld)=>tld.toLowerCase()));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/tlds.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/address/lib/uri.js":
/*!**************************************************!*\
  !*** ./node_modules/@sideway/address/lib/uri.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst Assert = __webpack_require__(/*! @hapi/hoek/lib/assert */ \"(rsc)/./node_modules/@hapi/hoek/lib/assert.js\");\nconst EscapeRegex = __webpack_require__(/*! @hapi/hoek/lib/escapeRegex */ \"(rsc)/./node_modules/@hapi/hoek/lib/escapeRegex.js\");\nconst internals = {};\ninternals.generate = function() {\n    const rfc3986 = {};\n    const hexDigit = \"\\\\dA-Fa-f\"; // HEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n    const hexDigitOnly = \"[\" + hexDigit + \"]\";\n    const unreserved = \"\\\\w-\\\\.~\"; // unreserved = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n    const subDelims = \"!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=\"; // sub-delims = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n    const pctEncoded = \"%\" + hexDigit; // pct-encoded = \"%\" HEXDIG HEXDIG\n    const pchar = unreserved + pctEncoded + subDelims + \":@\"; // pchar = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n    const pcharOnly = \"[\" + pchar + \"]\";\n    const decOctect = \"(?:0{0,2}\\\\d|0?[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])\"; // dec-octet = DIGIT / %x31-39 DIGIT / \"1\" 2DIGIT / \"2\" %x30-34 DIGIT / \"25\" %x30-35  ; 0-9 / 10-99 / 100-199 / 200-249 / 250-255\n    rfc3986.ipv4address = \"(?:\" + decOctect + \"\\\\.){3}\" + decOctect; // IPv4address = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\n    /*\n        h16 = 1*4HEXDIG ; 16 bits of address represented in hexadecimal\n        ls32 = ( h16 \":\" h16 ) / IPv4address ; least-significant 32 bits of address\n        IPv6address =                            6( h16 \":\" ) ls32\n                    /                       \"::\" 5( h16 \":\" ) ls32\n                    / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n                    / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n                    / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n                    / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n                    / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n                    / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n                    / [ *6( h16 \":\" ) h16 ] \"::\"\n    */ const h16 = hexDigitOnly + \"{1,4}\";\n    const ls32 = \"(?:\" + h16 + \":\" + h16 + \"|\" + rfc3986.ipv4address + \")\";\n    const IPv6SixHex = \"(?:\" + h16 + \":){6}\" + ls32;\n    const IPv6FiveHex = \"::(?:\" + h16 + \":){5}\" + ls32;\n    const IPv6FourHex = \"(?:\" + h16 + \")?::(?:\" + h16 + \":){4}\" + ls32;\n    const IPv6ThreeHex = \"(?:(?:\" + h16 + \":){0,1}\" + h16 + \")?::(?:\" + h16 + \":){3}\" + ls32;\n    const IPv6TwoHex = \"(?:(?:\" + h16 + \":){0,2}\" + h16 + \")?::(?:\" + h16 + \":){2}\" + ls32;\n    const IPv6OneHex = \"(?:(?:\" + h16 + \":){0,3}\" + h16 + \")?::\" + h16 + \":\" + ls32;\n    const IPv6NoneHex = \"(?:(?:\" + h16 + \":){0,4}\" + h16 + \")?::\" + ls32;\n    const IPv6NoneHex2 = \"(?:(?:\" + h16 + \":){0,5}\" + h16 + \")?::\" + h16;\n    const IPv6NoneHex3 = \"(?:(?:\" + h16 + \":){0,6}\" + h16 + \")?::\";\n    rfc3986.ipv4Cidr = \"(?:\\\\d|[1-2]\\\\d|3[0-2])\"; // IPv4 cidr = DIGIT / %x31-32 DIGIT / \"3\" %x30-32  ; 0-9 / 10-29 / 30-32\n    rfc3986.ipv6Cidr = \"(?:0{0,2}\\\\d|0?[1-9]\\\\d|1[01]\\\\d|12[0-8])\"; // IPv6 cidr = DIGIT / %x31-39 DIGIT / \"1\" %x0-1 DIGIT / \"12\" %x0-8;   0-9 / 10-99 / 100-119 / 120-128\n    rfc3986.ipv6address = \"(?:\" + IPv6SixHex + \"|\" + IPv6FiveHex + \"|\" + IPv6FourHex + \"|\" + IPv6ThreeHex + \"|\" + IPv6TwoHex + \"|\" + IPv6OneHex + \"|\" + IPv6NoneHex + \"|\" + IPv6NoneHex2 + \"|\" + IPv6NoneHex3 + \")\";\n    rfc3986.ipvFuture = \"v\" + hexDigitOnly + \"+\\\\.[\" + unreserved + subDelims + \":]+\"; // IPvFuture = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\n    rfc3986.scheme = \"[a-zA-Z][a-zA-Z\\\\d+-\\\\.]*\"; // scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    rfc3986.schemeRegex = new RegExp(rfc3986.scheme);\n    const userinfo = \"[\" + unreserved + pctEncoded + subDelims + \":]*\"; // userinfo = *( unreserved / pct-encoded / sub-delims / \":\" )\n    const IPLiteral = \"\\\\[(?:\" + rfc3986.ipv6address + \"|\" + rfc3986.ipvFuture + \")\\\\]\"; // IP-literal = \"[\" ( IPv6address / IPvFuture  ) \"]\"\n    const regName = \"[\" + unreserved + pctEncoded + subDelims + \"]{1,255}\"; // reg-name = *( unreserved / pct-encoded / sub-delims )\n    const host = \"(?:\" + IPLiteral + \"|\" + rfc3986.ipv4address + \"|\" + regName + \")\"; // host = IP-literal / IPv4address / reg-name\n    const port = \"\\\\d*\"; // port = *DIGIT\n    const authority = \"(?:\" + userinfo + \"@)?\" + host + \"(?::\" + port + \")?\"; // authority   = [ userinfo \"@\" ] host [ \":\" port ]\n    const authorityCapture = \"(?:\" + userinfo + \"@)?(\" + host + \")(?::\" + port + \")?\";\n    /*\n        segment       = *pchar\n        segment-nz    = 1*pchar\n        path          = path-abempty    ; begins with \"/\" '|' is empty\n                    / path-absolute   ; begins with \"/\" but not \"//\"\n                    / path-noscheme   ; begins with a non-colon segment\n                    / path-rootless   ; begins with a segment\n                    / path-empty      ; zero characters\n        path-abempty  = *( \"/\" segment )\n        path-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\n        path-rootless = segment-nz *( \"/\" segment )\n    */ const segment = pcharOnly + \"*\";\n    const segmentNz = pcharOnly + \"+\";\n    const segmentNzNc = \"[\" + unreserved + pctEncoded + subDelims + \"@\" + \"]+\";\n    const pathEmpty = \"\";\n    const pathAbEmpty = \"(?:\\\\/\" + segment + \")*\";\n    const pathAbsolute = \"\\\\/(?:\" + segmentNz + pathAbEmpty + \")?\";\n    const pathRootless = segmentNz + pathAbEmpty;\n    const pathNoScheme = segmentNzNc + pathAbEmpty;\n    const pathAbNoAuthority = \"(?:\\\\/\\\\/\\\\/\" + segment + pathAbEmpty + \")\"; // Used by file:///\n    // hier-part = \"//\" authority path\n    rfc3986.hierPart = \"(?:\" + \"(?:\\\\/\\\\/\" + authority + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathRootless + \"|\" + pathAbNoAuthority + \")\";\n    rfc3986.hierPartCapture = \"(?:\" + \"(?:\\\\/\\\\/\" + authorityCapture + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathRootless + \")\";\n    // relative-part = \"//\" authority path-abempty / path-absolute / path-noscheme / path-empty\n    rfc3986.relativeRef = \"(?:\" + \"(?:\\\\/\\\\/\" + authority + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathNoScheme + \"|\" + pathEmpty + \")\";\n    rfc3986.relativeRefCapture = \"(?:\" + \"(?:\\\\/\\\\/\" + authorityCapture + pathAbEmpty + \")\" + \"|\" + pathAbsolute + \"|\" + pathNoScheme + \"|\" + pathEmpty + \")\";\n    // query = *( pchar / \"/\" / \"?\" )\n    // query = *( pchar / \"[\" / \"]\" / \"/\" / \"?\" )\n    rfc3986.query = \"[\" + pchar + \"\\\\/\\\\?]*(?=#|$)\"; //Finish matching either at the fragment part '|' end of the line.\n    rfc3986.queryWithSquareBrackets = \"[\" + pchar + \"\\\\[\\\\]\\\\/\\\\?]*(?=#|$)\";\n    // fragment = *( pchar / \"/\" / \"?\" )\n    rfc3986.fragment = \"[\" + pchar + \"\\\\/\\\\?]*\";\n    return rfc3986;\n};\ninternals.rfc3986 = internals.generate();\nexports.ip = {\n    v4Cidr: internals.rfc3986.ipv4Cidr,\n    v6Cidr: internals.rfc3986.ipv6Cidr,\n    ipv4: internals.rfc3986.ipv4address,\n    ipv6: internals.rfc3986.ipv6address,\n    ipvfuture: internals.rfc3986.ipvFuture\n};\ninternals.createRegex = function(options) {\n    const rfc = internals.rfc3986;\n    // Construct expression\n    const query = options.allowQuerySquareBrackets ? rfc.queryWithSquareBrackets : rfc.query;\n    const suffix = \"(?:\\\\?\" + query + \")?\" + \"(?:#\" + rfc.fragment + \")?\";\n    // relative-ref = relative-part [ \"?\" query ] [ \"#\" fragment ]\n    const relative = options.domain ? rfc.relativeRefCapture : rfc.relativeRef;\n    if (options.relativeOnly) {\n        return internals.wrap(relative + suffix);\n    }\n    // Custom schemes\n    let customScheme = \"\";\n    if (options.scheme) {\n        Assert(options.scheme instanceof RegExp || typeof options.scheme === \"string\" || Array.isArray(options.scheme), \"scheme must be a RegExp, String, or Array\");\n        const schemes = [].concat(options.scheme);\n        Assert(schemes.length >= 1, \"scheme must have at least 1 scheme specified\");\n        // Flatten the array into a string to be used to match the schemes\n        const selections = [];\n        for(let i = 0; i < schemes.length; ++i){\n            const scheme = schemes[i];\n            Assert(scheme instanceof RegExp || typeof scheme === \"string\", \"scheme at position \" + i + \" must be a RegExp or String\");\n            if (scheme instanceof RegExp) {\n                selections.push(scheme.source.toString());\n            } else {\n                Assert(rfc.schemeRegex.test(scheme), \"scheme at position \" + i + \" must be a valid scheme\");\n                selections.push(EscapeRegex(scheme));\n            }\n        }\n        customScheme = selections.join(\"|\");\n    }\n    // URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n    const scheme = customScheme ? \"(?:\" + customScheme + \")\" : rfc.scheme;\n    const absolute = \"(?:\" + scheme + \":\" + (options.domain ? rfc.hierPartCapture : rfc.hierPart) + \")\";\n    const prefix = options.allowRelative ? \"(?:\" + absolute + \"|\" + relative + \")\" : absolute;\n    return internals.wrap(prefix + suffix, customScheme);\n};\ninternals.wrap = function(raw, scheme) {\n    raw = `(?=.)(?!https?\\:/(?:$|[^/]))(?!https?\\:///)(?!https?\\:[^/])${raw}`; // Require at least one character and explicitly forbid 'http:/' or HTTP with empty domain\n    return {\n        raw,\n        regex: new RegExp(`^${raw}$`),\n        scheme\n    };\n};\ninternals.uriRegex = internals.createRegex({});\nexports.regex = function(options = {}) {\n    if (options.scheme || options.allowRelative || options.relativeOnly || options.allowQuerySquareBrackets || options.domain) {\n        return internals.createRegex(options);\n    }\n    return internals.uriRegex;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvdXJpLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUM7QUFHNUIsTUFBTUUsWUFBWSxDQUFDO0FBR25CQSxVQUFVQyxRQUFRLEdBQUc7SUFFakIsTUFBTUMsVUFBVSxDQUFDO0lBRWpCLE1BQU1DLFdBQVcsYUFBMkQscURBQXFEO0lBQ2pJLE1BQU1DLGVBQWUsTUFBTUQsV0FBVztJQUV0QyxNQUFNRSxhQUFhLFlBQXlELHFEQUFxRDtJQUNqSSxNQUFNQyxZQUFZLHlCQUEwRCwrRUFBK0U7SUFDM0osTUFBTUMsYUFBYSxNQUFNSixVQUFtRCxrQ0FBa0M7SUFDOUcsTUFBTUssUUFBUUgsYUFBYUUsYUFBYUQsWUFBWSxNQUF3Qiw0REFBNEQ7SUFDeEksTUFBTUcsWUFBWSxNQUFNRCxRQUFRO0lBQ2hDLE1BQU1FLFlBQVksc0RBQTBELGlJQUFpSTtJQUU3TVIsUUFBUVMsV0FBVyxHQUFHLFFBQVFELFlBQVksWUFBWUEsV0FBc0Isb0VBQW9FO0lBRWhKOzs7Ozs7Ozs7Ozs7SUFZQSxHQUVBLE1BQU1FLE1BQU1SLGVBQWU7SUFDM0IsTUFBTVMsT0FBTyxRQUFRRCxNQUFNLE1BQU1BLE1BQU0sTUFBTVYsUUFBUVMsV0FBVyxHQUFHO0lBQ25FLE1BQU1HLGFBQWEsUUFBUUYsTUFBTSxVQUFVQztJQUMzQyxNQUFNRSxjQUFjLFVBQVVILE1BQU0sVUFBVUM7SUFDOUMsTUFBTUcsY0FBYyxRQUFRSixNQUFNLFlBQVlBLE1BQU0sVUFBVUM7SUFDOUQsTUFBTUksZUFBZSxXQUFXTCxNQUFNLFlBQVlBLE1BQU0sWUFBWUEsTUFBTSxVQUFVQztJQUNwRixNQUFNSyxhQUFhLFdBQVdOLE1BQU0sWUFBWUEsTUFBTSxZQUFZQSxNQUFNLFVBQVVDO0lBQ2xGLE1BQU1NLGFBQWEsV0FBV1AsTUFBTSxZQUFZQSxNQUFNLFNB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LGFBQWEsSUFDckJ2QixRQUFRTSxZQUFZLElBQ3BCTixRQUFRRSx3QkFBd0IsSUFDaENGLFFBQVFLLE1BQU0sRUFBRTtRQUVoQixPQUFPbEUsVUFBVTRELFdBQVcsQ0FBQ0M7SUFDakM7SUFFQSxPQUFPN0QsVUFBVXVGLFFBQVE7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YXN0ZWhlcm8vLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvYWRkcmVzcy9saWIvdXJpLmpzPzIxZDgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBc3NlcnQgPSByZXF1aXJlKCdAaGFwaS9ob2VrL2xpYi9hc3NlcnQnKTtcbmNvbnN0IEVzY2FwZVJlZ2V4ID0gcmVxdWlyZSgnQGhhcGkvaG9lay9saWIvZXNjYXBlUmVnZXgnKTtcblxuXG5jb25zdCBpbnRlcm5hbHMgPSB7fTtcblxuXG5pbnRlcm5hbHMuZ2VuZXJhdGUgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICBjb25zdCByZmMzOTg2ID0ge307XG5cbiAgICBjb25zdCBoZXhEaWdpdCA9ICdcXFxcZEEtRmEtZic7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBIRVhESUcgPSBESUdJVCAvIFwiQVwiIC8gXCJCXCIgLyBcIkNcIiAvIFwiRFwiIC8gXCJFXCIgLyBcIkZcIlxuICAgIGNvbnN0IGhleERpZ2l0T25seSA9ICdbJyArIGhleERpZ2l0ICsgJ10nO1xuXG4gICAgY29uc3QgdW5yZXNlcnZlZCA9ICdcXFxcdy1cXFxcLn4nOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB1bnJlc2VydmVkID0gQUxQSEEgLyBESUdJVCAvIFwiLVwiIC8gXCIuXCIgLyBcIl9cIiAvIFwiflwiXG4gICAgY29uc3Qgc3ViRGVsaW1zID0gJyFcXFxcJCZcXCdcXFxcKFxcXFwpXFxcXCpcXFxcKyw7PSc7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3ViLWRlbGltcyA9IFwiIVwiIC8gXCIkXCIgLyBcIiZcIiAvIFwiJ1wiIC8gXCIoXCIgLyBcIilcIiAvIFwiKlwiIC8gXCIrXCIgLyBcIixcIiAvIFwiO1wiIC8gXCI9XCJcbiAgICBjb25zdCBwY3RFbmNvZGVkID0gJyUnICsgaGV4RGlnaXQ7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcGN0LWVuY29kZWQgPSBcIiVcIiBIRVhESUcgSEVYRElHXG4gICAgY29uc3QgcGNoYXIgPSB1bnJlc2VydmVkICsgcGN0RW5jb2RlZCArIHN1YkRlbGltcyArICc6QCc7ICAgICAgICAgICAgICAgICAgIC8vIHBjaGFyID0gdW5yZXNlcnZlZCAvIHBjdC1lbmNvZGVkIC8gc3ViLWRlbGltcyAvIFwiOlwiIC8gXCJAXCJcbiAgICBjb25zdCBwY2hhck9ubHkgPSAnWycgKyBwY2hhciArICddJztcbiAgICBjb25zdCBkZWNPY3RlY3QgPSAnKD86MHswLDJ9XFxcXGR8MD9bMS05XVxcXFxkfDFcXFxcZFxcXFxkfDJbMC00XVxcXFxkfDI1WzAtNV0pJzsgICAgIC8vIGRlYy1vY3RldCA9IERJR0lUIC8gJXgzMS0zOSBESUdJVCAvIFwiMVwiIDJESUdJVCAvIFwiMlwiICV4MzAtMzQgRElHSVQgLyBcIjI1XCIgJXgzMC0zNSAgOyAwLTkgLyAxMC05OSAvIDEwMC0xOTkgLyAyMDAtMjQ5IC8gMjUwLTI1NVxuXG4gICAgcmZjMzk4Ni5pcHY0YWRkcmVzcyA9ICcoPzonICsgZGVjT2N0ZWN0ICsgJ1xcXFwuKXszfScgKyBkZWNPY3RlY3Q7ICAgICAgICAgICAgLy8gSVB2NGFkZHJlc3MgPSBkZWMtb2N0ZXQgXCIuXCIgZGVjLW9jdGV0IFwiLlwiIGRlYy1vY3RldCBcIi5cIiBkZWMtb2N0ZXRcblxuICAgIC8qXG4gICAgICAgIGgxNiA9IDEqNEhFWERJRyA7IDE2IGJpdHMgb2YgYWRkcmVzcyByZXByZXNlbnRlZCBpbiBoZXhhZGVjaW1hbFxuICAgICAgICBsczMyID0gKCBoMTYgXCI6XCIgaDE2ICkgLyBJUHY0YWRkcmVzcyA7IGxlYXN0LXNpZ25pZmljYW50IDMyIGJpdHMgb2YgYWRkcmVzc1xuICAgICAgICBJUHY2YWRkcmVzcyA9ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDYoIGgxNiBcIjpcIiApIGxzMzJcbiAgICAgICAgICAgICAgICAgICAgLyAgICAgICAgICAgICAgICAgICAgICAgXCI6OlwiIDUoIGgxNiBcIjpcIiApIGxzMzJcbiAgICAgICAgICAgICAgICAgICAgLyBbICAgICAgICAgICAgICAgaDE2IF0gXCI6OlwiIDQoIGgxNiBcIjpcIiApIGxzMzJcbiAgICAgICAgICAgICAgICAgICAgLyBbICoxKCBoMTYgXCI6XCIgKSBoMTYgXSBcIjo6XCIgMyggaDE2IFwiOlwiICkgbHMzMlxuICAgICAgICAgICAgICAgICAgICAvIFsgKjIoIGgxNiBcIjpcIiApIGgxNiBdIFwiOjpcIiAyKCBoMTYgXCI6XCIgKSBsczMyXG4gICAgICAgICAgICAgICAgICAgIC8gWyAqMyggaDE2IFwiOlwiICkgaDE2IF0gXCI6OlwiICAgIGgxNiBcIjpcIiAgIGxzMzJcbiAgICAgICAgICAgICAgICAgICAgLyBbICo0KCBoMTYgXCI6XCIgKSBoMTYgXSBcIjo6XCIgICAgICAgICAgICAgIGxzMzJcbiAgICAgICAgICAgICAgICAgICAgLyBbICo1KCBoMTYgXCI6XCIgKSBoMTYgXSBcIjo6XCIgICAgICAgICAgICAgIGgxNlxuICAgICAgICAgICAgICAgICAgICAvIFsgKjYoIGgxNiBcIjpcIiApIGgxNiBdIFwiOjpcIlxuICAgICovXG5cbiAgICBjb25zdCBoMTYgPSBoZXhEaWdpdE9ubHkgKyAnezEsNH0nO1xuICAgIGNvbnN0IGxzMzIgPSAnKD86JyArIGgxNiArICc6JyArIGgxNiArICd8JyArIHJmYzM5ODYuaXB2NGFkZHJlc3MgKyAnKSc7XG4gICAgY29uc3QgSVB2NlNpeEhleCA9ICcoPzonICsgaDE2ICsgJzopezZ9JyArIGxzMzI7XG4gICAgY29uc3QgSVB2NkZpdmVIZXggPSAnOjooPzonICsgaDE2ICsgJzopezV9JyArIGxzMzI7XG4gICAgY29uc3QgSVB2NkZvdXJIZXggPSAnKD86JyArIGgxNiArICcpPzo6KD86JyArIGgxNiArICc6KXs0fScgKyBsczMyO1xuICAgIGNvbnN0IElQdjZUaHJlZUhleCA9ICcoPzooPzonICsgaDE2ICsgJzopezAsMX0nICsgaDE2ICsgJyk/OjooPzonICsgaDE2ICsgJzopezN9JyArIGxzMzI7XG4gICAgY29uc3QgSVB2NlR3b0hleCA9ICcoPzooPzonICsgaDE2ICsgJzopezAsMn0nICsgaDE2ICsgJyk/OjooPzonICsgaDE2ICsgJzopezJ9JyArIGxzMzI7XG4gICAgY29uc3QgSVB2Nk9uZUhleCA9ICcoPzooPzonICsgaDE2ICsgJzopezAsM30nICsgaDE2ICsgJyk/OjonICsgaDE2ICsgJzonICsgbHMzMjtcbiAgICBjb25zdCBJUHY2Tm9uZUhleCA9ICcoPzooPzonICsgaDE2ICsgJzopezAsNH0nICsgaDE2ICsgJyk/OjonICsgbHMzMjtcbiAgICBjb25zdCBJUHY2Tm9uZUhleDIgPSAnKD86KD86JyArIGgxNiArICc6KXswLDV9JyArIGgxNiArICcpPzo6JyArIGgxNjtcbiAgICBjb25zdCBJUHY2Tm9uZUhleDMgPSAnKD86KD86JyArIGgxNiArICc6KXswLDZ9JyArIGgxNiArICcpPzo6JztcblxuICAgIHJmYzM5ODYuaXB2NENpZHIgPSAnKD86XFxcXGR8WzEtMl1cXFxcZHwzWzAtMl0pJzsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSVB2NCBjaWRyID0gRElHSVQgLyAleDMxLTMyIERJR0lUIC8gXCIzXCIgJXgzMC0zMiAgOyAwLTkgLyAxMC0yOSAvIDMwLTMyXG4gICAgcmZjMzk4Ni5pcHY2Q2lkciA9ICcoPzowezAsMn1cXFxcZHwwP1sxLTldXFxcXGR8MVswMV1cXFxcZHwxMlswLThdKSc7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIElQdjYgY2lkciA9IERJR0lUIC8gJXgzMS0zOSBESUdJVCAvIFwiMVwiICV4MC0xIERJR0lUIC8gXCIxMlwiICV4MC04OyAgIDAtOSAvIDEwLTk5IC8gMTAwLTExOSAvIDEyMC0xMjhcbiAgICByZmMzOTg2LmlwdjZhZGRyZXNzID0gJyg/OicgKyBJUHY2U2l4SGV4ICsgJ3wnICsgSVB2NkZpdmVIZXggKyAnfCcgKyBJUHY2Rm91ckhleCArICd8JyArIElQdjZUaHJlZUhleCArICd8JyArIElQdjZUd29IZXggKyAnfCcgKyBJUHY2T25lSGV4ICsgJ3wnICsgSVB2Nk5vbmVIZXggKyAnfCcgKyBJUHY2Tm9uZUhleDIgKyAnfCcgKyBJUHY2Tm9uZUhleDMgKyAnKSc7XG4gICAgcmZjMzk4Ni5pcHZGdXR1cmUgPSAndicgKyBoZXhEaWdpdE9ubHkgKyAnK1xcXFwuWycgKyB1bnJlc2VydmVkICsgc3ViRGVsaW1zICsgJzpdKyc7ICAgICAgLy8gSVB2RnV0dXJlID0gXCJ2XCIgMSpIRVhESUcgXCIuXCIgMSooIHVucmVzZXJ2ZWQgLyBzdWItZGVsaW1zIC8gXCI6XCIgKVxuXG4gICAgcmZjMzk4Ni5zY2hlbWUgPSAnW2EtekEtWl1bYS16QS1aXFxcXGQrLVxcXFwuXSonOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzY2hlbWUgPSBBTFBIQSAqKCBBTFBIQSAvIERJR0lUIC8gXCIrXCIgLyBcIi1cIiAvIFwiLlwiIClcbiAgICByZmMzOTg2LnNjaGVtZVJlZ2V4ID0gbmV3IFJlZ0V4cChyZmMzOTg2LnNjaGVtZSk7XG5cbiAgICBjb25zdCB1c2VyaW5mbyA9ICdbJyArIHVucmVzZXJ2ZWQgKyBwY3RFbmNvZGVkICsgc3ViRGVsaW1zICsgJzpdKic7ICAgICAgICAgICAgICAgICAgICAgLy8gdXNlcmluZm8gPSAqKCB1bnJlc2VydmVkIC8gcGN0LWVuY29kZWQgLyBzdWItZGVsaW1zIC8gXCI6XCIgKVxuICAgIGNvbnN0IElQTGl0ZXJhbCA9ICdcXFxcWyg/OicgKyByZmMzOTg2LmlwdjZhZGRyZXNzICsgJ3wnICsgcmZjMzk4Ni5pcHZGdXR1cmUgKyAnKVxcXFxdJzsgICAgLy8gSVAtbGl0ZXJhbCA9IFwiW1wiICggSVB2NmFkZHJlc3MgLyBJUHZGdXR1cmUgICkgXCJdXCJcbiAgICBjb25zdCByZWdOYW1lID0gJ1snICsgdW5yZXNlcnZlZCArIHBjdEVuY29kZWQgKyBzdWJEZWxpbXMgKyAnXXsxLDI1NX0nOyAgICAgICAgICAgICAgICAgLy8gcmVnLW5hbWUgPSAqKCB1bnJlc2VydmVkIC8gcGN0LWVuY29kZWQgLyBzdWItZGVsaW1zIClcbiAgICBjb25zdCBob3N0ID0gJyg/OicgKyBJUExpdGVyYWwgKyAnfCcgKyByZmMzOTg2LmlwdjRhZGRyZXNzICsgJ3wnICsgcmVnTmFtZSArICcpJzsgICAgICAgLy8gaG9zdCA9IElQLWxpdGVyYWwgLyBJUHY0YWRkcmVzcyAvIHJlZy1uYW1lXG4gICAgY29uc3QgcG9ydCA9ICdcXFxcZConOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcG9ydCA9ICpESUdJVFxuICAgIGNvbnN0IGF1dGhvcml0eSA9ICcoPzonICsgdXNlcmluZm8gKyAnQCk/JyArIGhvc3QgKyAnKD86OicgKyBwb3J0ICsgJyk/JzsgICAgICAgICAgICAgICAvLyBhdXRob3JpdHkgICA9IFsgdXNlcmluZm8gXCJAXCIgXSBob3N0IFsgXCI6XCIgcG9ydCBdXG4gICAgY29uc3QgYXV0aG9yaXR5Q2FwdHVyZSA9ICcoPzonICsgdXNlcmluZm8gKyAnQCk/KCcgKyBob3N0ICsgJykoPzo6JyArIHBvcnQgKyAnKT8nO1xuXG4gICAgLypcbiAgICAgICAgc2VnbWVudCAgICAgICA9ICpwY2hhclxuICAgICAgICBzZWdtZW50LW56ICAgID0gMSpwY2hhclxuICAgICAgICBwYXRoICAgICAgICAgID0gcGF0aC1hYmVtcHR5ICAgIDsgYmVnaW5zIHdpdGggXCIvXCIgJ3wnIGlzIGVtcHR5XG4gICAgICAgICAgICAgICAgICAgIC8gcGF0aC1hYnNvbHV0ZSAgIDsgYmVnaW5zIHdpdGggXCIvXCIgYnV0IG5vdCBcIi8vXCJcbiAgICAgICAgICAgICAgICAgICAgLyBwYXRoLW5vc2NoZW1lICAgOyBiZWdpbnMgd2l0aCBhIG5vbi1jb2xvbiBzZWdtZW50XG4gICAgICAgICAgICAgICAgICAgIC8gcGF0aC1yb290bGVzcyAgIDsgYmVnaW5zIHdpdGggYSBzZWdtZW50XG4gICAgICAgICAgICAgICAgICAgIC8gcGF0aC1lbXB0eSAgICAgIDsgemVybyBjaGFyYWN0ZXJzXG4gICAgICAgIHBhdGgtYWJlbXB0eSAgPSAqKCBcIi9cIiBzZWdtZW50IClcbiAgICAgICAgcGF0aC1hYnNvbHV0ZSA9IFwiL1wiIFsgc2VnbWVudC1ueiAqKCBcIi9cIiBzZWdtZW50ICkgXVxuICAgICAgICBwYXRoLXJvb3RsZXNzID0gc2VnbWVudC1ueiAqKCBcIi9cIiBzZWdtZW50IClcbiAgICAqL1xuXG4gICAgY29uc3Qgc2VnbWVudCA9IHBjaGFyT25seSArICcqJztcbiAgICBjb25zdCBzZWdtZW50TnogPSBwY2hhck9ubHkgKyAnKyc7XG4gICAgY29uc3Qgc2VnbWVudE56TmMgPSAnWycgKyB1bnJlc2VydmVkICsgcGN0RW5jb2RlZCArIHN1YkRlbGltcyArICdAJyArICddKyc7XG4gICAgY29uc3QgcGF0aEVtcHR5ID0gJyc7XG4gICAgY29uc3QgcGF0aEFiRW1wdHkgPSAnKD86XFxcXC8nICsgc2VnbWVudCArICcpKic7XG4gICAgY29uc3QgcGF0aEFic29sdXRlID0gJ1xcXFwvKD86JyArIHNlZ21lbnROeiArIHBhdGhBYkVtcHR5ICsgJyk/JztcbiAgICBjb25zdCBwYXRoUm9vdGxlc3MgPSBzZWdtZW50TnogKyBwYXRoQWJFbXB0eTtcbiAgICBjb25zdCBwYXRoTm9TY2hlbWUgPSBzZWdtZW50TnpOYyArIHBhdGhBYkVtcHR5O1xuICAgIGNvbnN0IHBhdGhBYk5vQXV0aG9yaXR5ID0gJyg/OlxcXFwvXFxcXC9cXFxcLycgKyBzZWdtZW50ICsgcGF0aEFiRW1wdHkgKyAnKSc7ICAgICAvLyBVc2VkIGJ5IGZpbGU6Ly8vXG5cbiAgICAvLyBoaWVyLXBhcnQgPSBcIi8vXCIgYXV0aG9yaXR5IHBhdGhcblxuICAgIHJmYzM5ODYuaGllclBhcnQgPSAnKD86JyArICcoPzpcXFxcL1xcXFwvJyArIGF1dGhvcml0eSArIHBhdGhBYkVtcHR5ICsgJyknICsgJ3wnICsgcGF0aEFic29sdXRlICsgJ3wnICsgcGF0aFJvb3RsZXNzICsgJ3wnICsgcGF0aEFiTm9BdXRob3JpdHkgKyAnKSc7XG4gICAgcmZjMzk4Ni5oaWVyUGFydENhcHR1cmUgPSAnKD86JyArICcoPzpcXFxcL1xcXFwvJyArIGF1dGhvcml0eUNhcHR1cmUgKyBwYXRoQWJFbXB0eSArICcpJyArICd8JyArIHBhdGhBYnNvbHV0ZSArICd8JyArIHBhdGhSb290bGVzcyArICcpJztcblxuICAgIC8vIHJlbGF0aXZlLXBhcnQgPSBcIi8vXCIgYXV0aG9yaXR5IHBhdGgtYWJlbXB0eSAvIHBhdGgtYWJzb2x1dGUgLyBwYXRoLW5vc2NoZW1lIC8gcGF0aC1lbXB0eVxuXG4gICAgcmZjMzk4Ni5yZWxhdGl2ZVJlZiA9ICcoPzonICsgJyg/OlxcXFwvXFxcXC8nICsgYXV0aG9yaXR5ICsgcGF0aEFiRW1wdHkgKyAnKScgKyAnfCcgKyBwYXRoQWJzb2x1dGUgKyAnfCcgKyBwYXRoTm9TY2hlbWUgKyAnfCcgKyBwYXRoRW1wdHkgKyAnKSc7XG4gICAgcmZjMzk4Ni5yZWxhdGl2ZVJlZkNhcHR1cmUgPSAnKD86JyArICcoPzpcXFxcL1xcXFwvJyArIGF1dGhvcml0eUNhcHR1cmUgKyBwYXRoQWJFbXB0eSArICcpJyArICd8JyArIHBhdGhBYnNvbHV0ZSArICd8JyArIHBhdGhOb1NjaGVtZSArICd8JyArIHBhdGhFbXB0eSArICcpJztcblxuICAgIC8vIHF1ZXJ5ID0gKiggcGNoYXIgLyBcIi9cIiAvIFwiP1wiIClcbiAgICAvLyBxdWVyeSA9ICooIHBjaGFyIC8gXCJbXCIgLyBcIl1cIiAvIFwiL1wiIC8gXCI/XCIgKVxuXG4gICAgcmZjMzk4Ni5xdWVyeSA9ICdbJyArIHBjaGFyICsgJ1xcXFwvXFxcXD9dKig/PSN8JCknOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL0ZpbmlzaCBtYXRjaGluZyBlaXRoZXIgYXQgdGhlIGZyYWdtZW50IHBhcnQgJ3wnIGVuZCBvZiB0aGUgbGluZS5cbiAgICByZmMzOTg2LnF1ZXJ5V2l0aFNxdWFyZUJyYWNrZXRzID0gJ1snICsgcGNoYXIgKyAnXFxcXFtcXFxcXVxcXFwvXFxcXD9dKig/PSN8JCknO1xuXG4gICAgLy8gZnJhZ21lbnQgPSAqKCBwY2hhciAvIFwiL1wiIC8gXCI/XCIgKVxuXG4gICAgcmZjMzk4Ni5mcmFnbWVudCA9ICdbJyArIHBjaGFyICsgJ1xcXFwvXFxcXD9dKic7XG5cbiAgICByZXR1cm4gcmZjMzk4Njtcbn07XG5cbmludGVybmFscy5yZmMzOTg2ID0gaW50ZXJuYWxzLmdlbmVyYXRlKCk7XG5cblxuZXhwb3J0cy5pcCA9IHtcbiAgICB2NENpZHI6IGludGVybmFscy5yZmMzOTg2LmlwdjRDaWRyLFxuICAgIHY2Q2lkcjogaW50ZXJuYWxzLnJmYzM5ODYuaXB2NkNpZHIsXG4gICAgaXB2NDogaW50ZXJuYWxzLnJmYzM5ODYuaXB2NGFkZHJlc3MsXG4gICAgaXB2NjogaW50ZXJuYWxzLnJmYzM5ODYuaXB2NmFkZHJlc3MsXG4gICAgaXB2ZnV0dXJlOiBpbnRlcm5hbHMucmZjMzk4Ni5pcHZGdXR1cmVcbn07XG5cblxuaW50ZXJuYWxzLmNyZWF0ZVJlZ2V4ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcblxuICAgIGNvbnN0IHJmYyA9IGludGVybmFscy5yZmMzOTg2O1xuXG4gICAgLy8gQ29uc3RydWN0IGV4cHJlc3Npb25cblxuICAgIGNvbnN0IHF1ZXJ5ID0gb3B0aW9ucy5hbGxvd1F1ZXJ5U3F1YXJlQnJhY2tldHMgPyByZmMucXVlcnlXaXRoU3F1YXJlQnJhY2tldHMgOiByZmMucXVlcnk7XG4gICAgY29uc3Qgc3VmZml4ID0gJyg/OlxcXFw/JyArIHF1ZXJ5ICsgJyk/JyArICcoPzojJyArIHJmYy5mcmFnbWVudCArICcpPyc7XG5cbiAgICAvLyByZWxhdGl2ZS1yZWYgPSByZWxhdGl2ZS1wYXJ0IFsgXCI/XCIgcXVlcnkgXSBbIFwiI1wiIGZyYWdtZW50IF1cblxuICAgIGNvbnN0IHJlbGF0aXZlID0gb3B0aW9ucy5kb21haW4gPyByZmMucmVsYXRpdmVSZWZDYXB0dXJlIDogcmZjLnJlbGF0aXZlUmVmO1xuXG4gICAgaWYgKG9wdGlvbnMucmVsYXRpdmVPbmx5KSB7XG4gICAgICAgIHJldHVybiBpbnRlcm5hbHMud3JhcChyZWxhdGl2ZSArIHN1ZmZpeCk7XG4gICAgfVxuXG4gICAgLy8gQ3VzdG9tIHNjaGVtZXNcblxuICAgIGxldCBjdXN0b21TY2hlbWUgPSAnJztcbiAgICBpZiAob3B0aW9ucy5zY2hlbWUpIHtcbiAgICAgICAgQXNzZXJ0KG9wdGlvbnMuc2NoZW1lIGluc3RhbmNlb2YgUmVnRXhwIHx8IHR5cGVvZiBvcHRpb25zLnNjaGVtZSA9PT0gJ3N0cmluZycgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zLnNjaGVtZSksICdzY2hlbWUgbXVzdCBiZSBhIFJlZ0V4cCwgU3RyaW5nLCBvciBBcnJheScpO1xuXG4gICAgICAgIGNvbnN0IHNjaGVtZXMgPSBbXS5jb25jYXQob3B0aW9ucy5zY2hlbWUpO1xuICAgICAgICBBc3NlcnQoc2NoZW1lcy5sZW5ndGggPj0gMSwgJ3NjaGVtZSBtdXN0IGhhdmUgYXQgbGVhc3QgMSBzY2hlbWUgc3BlY2lmaWVkJyk7XG5cbiAgICAgICAgLy8gRmxhdHRlbiB0aGUgYXJyYXkgaW50byBhIHN0cmluZyB0byBiZSB1c2VkIHRvIG1hdGNoIHRoZSBzY2hlbWVzXG5cbiAgICAgICAgY29uc3Qgc2VsZWN0aW9ucyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNjaGVtZXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGNvbnN0IHNjaGVtZSA9IHNjaGVtZXNbaV07XG4gICAgICAgICAgICBBc3NlcnQoc2NoZW1lIGluc3RhbmNlb2YgUmVnRXhwIHx8IHR5cGVvZiBzY2hlbWUgPT09ICdzdHJpbmcnLCAnc2NoZW1lIGF0IHBvc2l0aW9uICcgKyBpICsgJyBtdXN0IGJlIGEgUmVnRXhwIG9yIFN0cmluZycpO1xuXG4gICAgICAgICAgICBpZiAoc2NoZW1lIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0aW9ucy5wdXNoKHNjaGVtZS5zb3VyY2UudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBBc3NlcnQocmZjLnNjaGVtZVJlZ2V4LnRlc3Qoc2NoZW1lKSwgJ3NjaGVtZSBhdCBwb3NpdGlvbiAnICsgaSArICcgbXVzdCBiZSBhIHZhbGlkIHNjaGVtZScpO1xuICAgICAgICAgICAgICAgIHNlbGVjdGlvbnMucHVzaChFc2NhcGVSZWdleChzY2hlbWUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGN1c3RvbVNjaGVtZSA9IHNlbGVjdGlvbnMuam9pbignfCcpO1xuICAgIH1cblxuICAgIC8vIFVSSSA9IHNjaGVtZSBcIjpcIiBoaWVyLXBhcnQgWyBcIj9cIiBxdWVyeSBdIFsgXCIjXCIgZnJhZ21lbnQgXVxuXG4gICAgY29uc3Qgc2NoZW1lID0gY3VzdG9tU2NoZW1lID8gJyg/OicgKyBjdXN0b21TY2hlbWUgKyAnKScgOiByZmMuc2NoZW1lO1xuICAgIGNvbnN0IGFic29sdXRlID0gJyg/OicgKyBzY2hlbWUgKyAnOicgKyAob3B0aW9ucy5kb21haW4gPyByZmMuaGllclBhcnRDYXB0dXJlIDogcmZjLmhpZXJQYXJ0KSArICcpJztcbiAgICBjb25zdCBwcmVmaXggPSBvcHRpb25zLmFsbG93UmVsYXRpdmUgPyAnKD86JyArIGFic29sdXRlICsgJ3wnICsgcmVsYXRpdmUgKyAnKScgOiBhYnNvbHV0ZTtcbiAgICByZXR1cm4gaW50ZXJuYWxzLndyYXAocHJlZml4ICsgc3VmZml4LCBjdXN0b21TY2hlbWUpO1xufTtcblxuXG5pbnRlcm5hbHMud3JhcCA9IGZ1bmN0aW9uIChyYXcsIHNjaGVtZSkge1xuXG4gICAgcmF3ID0gYCg/PS4pKD8haHR0cHM/XFw6Lyg/OiR8W14vXSkpKD8haHR0cHM/XFw6Ly8vKSg/IWh0dHBzP1xcOlteL10pJHtyYXd9YDsgICAgIC8vIFJlcXVpcmUgYXQgbGVhc3Qgb25lIGNoYXJhY3RlciBhbmQgZXhwbGljaXRseSBmb3JiaWQgJ2h0dHA6Lycgb3IgSFRUUCB3aXRoIGVtcHR5IGRvbWFpblxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmF3LFxuICAgICAgICByZWdleDogbmV3IFJlZ0V4cChgXiR7cmF3fSRgKSxcbiAgICAgICAgc2NoZW1lXG4gICAgfTtcbn07XG5cblxuaW50ZXJuYWxzLnVyaVJlZ2V4ID0gaW50ZXJuYWxzLmNyZWF0ZVJlZ2V4KHt9KTtcblxuXG5leHBvcnRzLnJlZ2V4ID0gZnVuY3Rpb24gKG9wdGlvbnMgPSB7fSkge1xuXG4gICAgaWYgKG9wdGlvbnMuc2NoZW1lIHx8XG4gICAgICAgIG9wdGlvbnMuYWxsb3dSZWxhdGl2ZSB8fFxuICAgICAgICBvcHRpb25zLnJlbGF0aXZlT25seSB8fFxuICAgICAgICBvcHRpb25zLmFsbG93UXVlcnlTcXVhcmVCcmFja2V0cyB8fFxuICAgICAgICBvcHRpb25zLmRvbWFpbikge1xuXG4gICAgICAgIHJldHVybiBpbnRlcm5hbHMuY3JlYXRlUmVnZXgob3B0aW9ucyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGludGVybmFscy51cmlSZWdleDtcbn07XG4iXSwibmFtZXMiOlsiQXNzZXJ0IiwicmVxdWlyZSIsIkVzY2FwZVJlZ2V4IiwiaW50ZXJuYWxzIiwiZ2VuZXJhdGUiLCJyZmMzOTg2IiwiaGV4RGlnaXQiLCJoZXhEaWdpdE9ubHkiLCJ1bnJlc2VydmVkIiwic3ViRGVsaW1zIiwicGN0RW5jb2RlZCIsInBjaGFyIiwicGNoYXJPbmx5IiwiZGVjT2N0ZWN0IiwiaXB2NGFkZHJlc3MiLCJoMTYiLCJsczMyIiwiSVB2NlNpeEhleCIsIklQdjZGaXZlSGV4IiwiSVB2NkZvdXJIZXgiLCJJUHY2VGhyZWVIZXgiLCJJUHY2VHdvSGV4IiwiSVB2Nk9uZUhleCIsIklQdjZOb25lSGV4IiwiSVB2Nk5vbmVIZXgyIiwiSVB2Nk5vbmVIZXgzIiwiaXB2NENpZHIiLCJpcHY2Q2lkciIsImlwdjZhZGRyZXNzIiwiaXB2RnV0dXJlIiwic2NoZW1lIiwic2NoZW1lUmVnZXgiLCJSZWdFeHAiLCJ1c2VyaW5mbyIsIklQTGl0ZXJhbCIsInJlZ05hbWUiLCJob3N0IiwicG9ydCIsImF1dGhvcml0eSIsImF1dGhvcml0eUNhcHR1cmUiLCJzZWdtZW50Iiwic2VnbWVudE56Iiwic2VnbWVudE56TmMiLCJwYXRoRW1wdHkiLCJwYXRoQWJFbXB0eSIsInBhdGhBYnNvbHV0ZSIsInBhdGhSb290bGVzcyIsInBhdGhOb1NjaGVtZSIsInBhdGhBYk5vQXV0aG9yaXR5IiwiaGllclBhcnQiLCJoaWVyUGFydENhcHR1cmUiLCJyZWxhdGl2ZVJlZiIsInJlbGF0aXZlUmVmQ2FwdHVyZSIsInF1ZXJ5IiwicXVlcnlXaXRoU3F1YXJlQnJhY2tldHMiLCJmcmFnbWVudCIsImV4cG9ydHMiLCJpcCIsInY0Q2lkciIsInY2Q2lkciIsImlwdjQiLCJpcHY2IiwiaXB2ZnV0dXJlIiwiY3JlYXRlUmVnZXgiLCJvcHRpb25zIiwicmZjIiwiYWxsb3dRdWVyeVNxdWFyZUJyYWNrZXRzIiwic3VmZml4IiwicmVsYXRpdmUiLCJkb21haW4iLCJyZWxhdGl2ZU9ubHkiLCJ3cmFwIiwiY3VzdG9tU2NoZW1lIiwiQXJyYXkiLCJpc0FycmF5Iiwic2NoZW1lcyIsImNvbmNhdCIsImxlbmd0aCIsInNlbGVjdGlvbnMiLCJpIiwicHVzaCIsInNvdXJjZSIsInRvU3RyaW5nIiwidGVzdCIsImpvaW4iLCJhYnNvbHV0ZSIsInByZWZpeCIsImFsbG93UmVsYXRpdmUiLCJyYXciLCJyZWdleCIsInVyaVJlZ2V4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/address/lib/uri.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/formula/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@sideway/formula/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nconst internals = {\n    operators: [\n        \"!\",\n        \"^\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \"+\",\n        \"-\",\n        \"<\",\n        \"<=\",\n        \">\",\n        \">=\",\n        \"==\",\n        \"!=\",\n        \"&&\",\n        \"||\",\n        \"??\"\n    ],\n    operatorCharacters: [\n        \"!\",\n        \"^\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \"+\",\n        \"-\",\n        \"<\",\n        \"=\",\n        \">\",\n        \"&\",\n        \"|\",\n        \"?\"\n    ],\n    operatorsOrder: [\n        [\n            \"^\"\n        ],\n        [\n            \"*\",\n            \"/\",\n            \"%\"\n        ],\n        [\n            \"+\",\n            \"-\"\n        ],\n        [\n            \"<\",\n            \"<=\",\n            \">\",\n            \">=\"\n        ],\n        [\n            \"==\",\n            \"!=\"\n        ],\n        [\n            \"&&\"\n        ],\n        [\n            \"||\",\n            \"??\"\n        ]\n    ],\n    operatorsPrefix: [\n        \"!\",\n        \"n\"\n    ],\n    literals: {\n        '\"': '\"',\n        \"`\": \"`\",\n        \"'\": \"'\",\n        \"[\": \"]\"\n    },\n    numberRx: /^(?:[0-9]*(\\.[0-9]*)?){1}$/,\n    tokenRx: /^[\\w\\$\\#\\.\\@\\:\\{\\}]+$/,\n    symbol: Symbol(\"formula\"),\n    settings: Symbol(\"settings\")\n};\nexports.Parser = class {\n    constructor(string, options = {}){\n        if (!options[internals.settings] && options.constants) {\n            for(const constant in options.constants){\n                const value = options.constants[constant];\n                if (value !== null && ![\n                    \"boolean\",\n                    \"number\",\n                    \"string\"\n                ].includes(typeof value)) {\n                    throw new Error(`Formula constant ${constant} contains invalid ${typeof value} value type`);\n                }\n            }\n        }\n        this.settings = options[internals.settings] ? options : Object.assign({\n            [internals.settings]: true,\n            constants: {},\n            functions: {}\n        }, options);\n        this.single = null;\n        this._parts = null;\n        this._parse(string);\n    }\n    _parse(string) {\n        let parts = [];\n        let current = \"\";\n        let parenthesis = 0;\n        let literal = false;\n        const flush = (inner)=>{\n            if (parenthesis) {\n                throw new Error(\"Formula missing closing parenthesis\");\n            }\n            const last = parts.length ? parts[parts.length - 1] : null;\n            if (!literal && !current && !inner) {\n                return;\n            }\n            if (last && last.type === \"reference\" && inner === \")\") {\n                last.type = \"function\";\n                last.value = this._subFormula(current, last.value);\n                current = \"\";\n                return;\n            }\n            if (inner === \")\") {\n                const sub = new exports.Parser(current, this.settings);\n                parts.push({\n                    type: \"segment\",\n                    value: sub\n                });\n            } else if (literal) {\n                if (literal === \"]\") {\n                    parts.push({\n                        type: \"reference\",\n                        value: current\n                    });\n                    current = \"\";\n                    return;\n                }\n                parts.push({\n                    type: \"literal\",\n                    value: current\n                }); // Literal\n            } else if (internals.operatorCharacters.includes(current)) {\n                if (last && last.type === \"operator\" && internals.operators.includes(last.value + current)) {\n                    last.value += current;\n                } else {\n                    parts.push({\n                        type: \"operator\",\n                        value: current\n                    });\n                }\n            } else if (current.match(internals.numberRx)) {\n                parts.push({\n                    type: \"constant\",\n                    value: parseFloat(current)\n                });\n            } else if (this.settings.constants[current] !== undefined) {\n                parts.push({\n                    type: \"constant\",\n                    value: this.settings.constants[current]\n                });\n            } else {\n                if (!current.match(internals.tokenRx)) {\n                    throw new Error(`Formula contains invalid token: ${current}`);\n                }\n                parts.push({\n                    type: \"reference\",\n                    value: current\n                });\n            }\n            current = \"\";\n        };\n        for (const c of string){\n            if (literal) {\n                if (c === literal) {\n                    flush();\n                    literal = false;\n                } else {\n                    current += c;\n                }\n            } else if (parenthesis) {\n                if (c === \"(\") {\n                    current += c;\n                    ++parenthesis;\n                } else if (c === \")\") {\n                    --parenthesis;\n                    if (!parenthesis) {\n                        flush(c);\n                    } else {\n                        current += c;\n                    }\n                } else {\n                    current += c;\n                }\n            } else if (c in internals.literals) {\n                literal = internals.literals[c];\n            } else if (c === \"(\") {\n                flush();\n                ++parenthesis;\n            } else if (internals.operatorCharacters.includes(c)) {\n                flush();\n                current = c;\n                flush();\n            } else if (c !== \" \") {\n                current += c;\n            } else {\n                flush();\n            }\n        }\n        flush();\n        // Replace prefix - to internal negative operator\n        parts = parts.map((part, i)=>{\n            if (part.type !== \"operator\" || part.value !== \"-\" || i && parts[i - 1].type !== \"operator\") {\n                return part;\n            }\n            return {\n                type: \"operator\",\n                value: \"n\"\n            };\n        });\n        // Validate tokens order\n        let operator = false;\n        for (const part of parts){\n            if (part.type === \"operator\") {\n                if (internals.operatorsPrefix.includes(part.value)) {\n                    continue;\n                }\n                if (!operator) {\n                    throw new Error(\"Formula contains an operator in invalid position\");\n                }\n                if (!internals.operators.includes(part.value)) {\n                    throw new Error(`Formula contains an unknown operator ${part.value}`);\n                }\n            } else if (operator) {\n                throw new Error(\"Formula missing expected operator\");\n            }\n            operator = !operator;\n        }\n        if (!operator) {\n            throw new Error(\"Formula contains invalid trailing operator\");\n        }\n        // Identify single part\n        if (parts.length === 1 && [\n            \"reference\",\n            \"literal\",\n            \"constant\"\n        ].includes(parts[0].type)) {\n            this.single = {\n                type: parts[0].type === \"reference\" ? \"reference\" : \"value\",\n                value: parts[0].value\n            };\n        }\n        // Process parts\n        this._parts = parts.map((part)=>{\n            // Operators\n            if (part.type === \"operator\") {\n                return internals.operatorsPrefix.includes(part.value) ? part : part.value;\n            }\n            // Literals, constants, segments\n            if (part.type !== \"reference\") {\n                return part.value;\n            }\n            // References\n            if (this.settings.tokenRx && !this.settings.tokenRx.test(part.value)) {\n                throw new Error(`Formula contains invalid reference ${part.value}`);\n            }\n            if (this.settings.reference) {\n                return this.settings.reference(part.value);\n            }\n            return internals.reference(part.value);\n        });\n    }\n    _subFormula(string, name) {\n        const method = this.settings.functions[name];\n        if (typeof method !== \"function\") {\n            throw new Error(`Formula contains unknown function ${name}`);\n        }\n        let args = [];\n        if (string) {\n            let current = \"\";\n            let parenthesis = 0;\n            let literal = false;\n            const flush = ()=>{\n                if (!current) {\n                    throw new Error(`Formula contains function ${name} with invalid arguments ${string}`);\n                }\n                args.push(current);\n                current = \"\";\n            };\n            for(let i = 0; i < string.length; ++i){\n                const c = string[i];\n                if (literal) {\n                    current += c;\n                    if (c === literal) {\n                        literal = false;\n                    }\n                } else if (c in internals.literals && !parenthesis) {\n                    current += c;\n                    literal = internals.literals[c];\n                } else if (c === \",\" && !parenthesis) {\n                    flush();\n                } else {\n                    current += c;\n                    if (c === \"(\") {\n                        ++parenthesis;\n                    } else if (c === \")\") {\n                        --parenthesis;\n                    }\n                }\n            }\n            flush();\n        }\n        args = args.map((arg)=>new exports.Parser(arg, this.settings));\n        return function(context) {\n            const innerValues = [];\n            for (const arg of args){\n                innerValues.push(arg.evaluate(context));\n            }\n            return method.call(context, ...innerValues);\n        };\n    }\n    evaluate(context) {\n        const parts = this._parts.slice();\n        // Prefix operators\n        for(let i = parts.length - 2; i >= 0; --i){\n            const part = parts[i];\n            if (part && part.type === \"operator\") {\n                const current = parts[i + 1];\n                parts.splice(i + 1, 1);\n                const value = internals.evaluate(current, context);\n                parts[i] = internals.single(part.value, value);\n            }\n        }\n        // Left-right operators\n        internals.operatorsOrder.forEach((set)=>{\n            for(let i = 1; i < parts.length - 1;){\n                if (set.includes(parts[i])) {\n                    const operator = parts[i];\n                    const left = internals.evaluate(parts[i - 1], context);\n                    const right = internals.evaluate(parts[i + 1], context);\n                    parts.splice(i, 2);\n                    const result = internals.calculate(operator, left, right);\n                    parts[i - 1] = result === 0 ? 0 : result; // Convert -0\n                } else {\n                    i += 2;\n                }\n            }\n        });\n        return internals.evaluate(parts[0], context);\n    }\n};\nexports.Parser.prototype[internals.symbol] = true;\ninternals.reference = function(name) {\n    return function(context) {\n        return context && context[name] !== undefined ? context[name] : null;\n    };\n};\ninternals.evaluate = function(part, context) {\n    if (part === null) {\n        return null;\n    }\n    if (typeof part === \"function\") {\n        return part(context);\n    }\n    if (part[internals.symbol]) {\n        return part.evaluate(context);\n    }\n    return part;\n};\ninternals.single = function(operator, value) {\n    if (operator === \"!\") {\n        return value ? false : true;\n    }\n    // operator === 'n'\n    const negative = -value;\n    if (negative === 0) {\n        return 0;\n    }\n    return negative;\n};\ninternals.calculate = function(operator, left, right) {\n    if (operator === \"??\") {\n        return internals.exists(left) ? left : right;\n    }\n    if (typeof left === \"string\" || typeof right === \"string\") {\n        if (operator === \"+\") {\n            left = internals.exists(left) ? left : \"\";\n            right = internals.exists(right) ? right : \"\";\n            return left + right;\n        }\n    } else {\n        switch(operator){\n            case \"^\":\n                return Math.pow(left, right);\n            case \"*\":\n                return left * right;\n            case \"/\":\n                return left / right;\n            case \"%\":\n                return left % right;\n            case \"+\":\n                return left + right;\n            case \"-\":\n                return left - right;\n        }\n    }\n    switch(operator){\n        case \"<\":\n            return left < right;\n        case \"<=\":\n            return left <= right;\n        case \">\":\n            return left > right;\n        case \">=\":\n            return left >= right;\n        case \"==\":\n            return left === right;\n        case \"!=\":\n            return left !== right;\n        case \"&&\":\n            return left && right;\n        case \"||\":\n            return left || right;\n    }\n    return null;\n};\ninternals.exists = function(value) {\n    return value !== null && value !== undefined;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/formula/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sideway/pinpoint/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sideway/pinpoint/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nconst internals = {};\nexports.location = function(depth = 0) {\n    const orig = Error.prepareStackTrace;\n    Error.prepareStackTrace = (ignore, stack)=>stack;\n    const capture = {};\n    Error.captureStackTrace(capture, this);\n    const line = capture.stack[depth + 1];\n    Error.prepareStackTrace = orig;\n    return {\n        filename: line.getFileName(),\n        line: line.getLineNumber()\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpZGV3YXkvcGlucG9pbnQvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsWUFBWSxDQUFDO0FBR25CQyxnQkFBZ0IsR0FBRyxTQUFVRSxRQUFRLENBQUM7SUFFbEMsTUFBTUMsT0FBT0MsTUFBTUMsaUJBQWlCO0lBQ3BDRCxNQUFNQyxpQkFBaUIsR0FBRyxDQUFDQyxRQUFRQyxRQUFVQTtJQUU3QyxNQUFNQyxVQUFVLENBQUM7SUFDakJKLE1BQU1LLGlCQUFpQixDQUFDRCxTQUFTLElBQUk7SUFDckMsTUFBTUUsT0FBT0YsUUFBUUQsS0FBSyxDQUFDTCxRQUFRLEVBQUU7SUFFckNFLE1BQU1DLGlCQUFpQixHQUFHRjtJQUUxQixPQUFPO1FBQ0hRLFVBQVVELEtBQUtFLFdBQVc7UUFDMUJGLE1BQU1BLEtBQUtHLGFBQWE7SUFDNUI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dhc3RlaGVyby8uL25vZGVfbW9kdWxlcy9Ac2lkZXdheS9waW5wb2ludC9saWIvaW5kZXguanM/NjBhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGludGVybmFscyA9IHt9O1xuXG5cbmV4cG9ydHMubG9jYXRpb24gPSBmdW5jdGlvbiAoZGVwdGggPSAwKSB7XG5cbiAgICBjb25zdCBvcmlnID0gRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7XG4gICAgRXJyb3IucHJlcGFyZVN0YWNrVHJhY2UgPSAoaWdub3JlLCBzdGFjaykgPT4gc3RhY2s7XG5cbiAgICBjb25zdCBjYXB0dXJlID0ge307XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UoY2FwdHVyZSwgdGhpcyk7XG4gICAgY29uc3QgbGluZSA9IGNhcHR1cmUuc3RhY2tbZGVwdGggKyAxXTtcblxuICAgIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gb3JpZztcblxuICAgIHJldHVybiB7XG4gICAgICAgIGZpbGVuYW1lOiBsaW5lLmdldEZpbGVOYW1lKCksXG4gICAgICAgIGxpbmU6IGxpbmUuZ2V0TGluZU51bWJlcigpXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsiaW50ZXJuYWxzIiwiZXhwb3J0cyIsImxvY2F0aW9uIiwiZGVwdGgiLCJvcmlnIiwiRXJyb3IiLCJwcmVwYXJlU3RhY2tUcmFjZSIsImlnbm9yZSIsInN0YWNrIiwiY2FwdHVyZSIsImNhcHR1cmVTdGFja1RyYWNlIiwibGluZSIsImZpbGVuYW1lIiwiZ2V0RmlsZU5hbWUiLCJnZXRMaW5lTnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sideway/pinpoint/lib/index.js\n");

/***/ })

};
;