"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/rewards/page",{

/***/ "(app-pages-browser)/./src/utils/db/actions.ts":
/*!*********************************!*\
  !*** ./src/utils/db/actions.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReport: function() { return /* binding */ createReport; },\n/* harmony export */   createTransaction: function() { return /* binding */ createTransaction; },\n/* harmony export */   createUser: function() { return /* binding */ createUser; },\n/* harmony export */   getAllRewards: function() { return /* binding */ getAllRewards; },\n/* harmony export */   getAvailableRewards: function() { return /* binding */ getAvailableRewards; },\n/* harmony export */   getRecentReports: function() { return /* binding */ getRecentReports; },\n/* harmony export */   getRewardTransactions: function() { return /* binding */ getRewardTransactions; },\n/* harmony export */   getUnreadNotifications: function() { return /* binding */ getUnreadNotifications; },\n/* harmony export */   getUserByEmail: function() { return /* binding */ getUserByEmail; },\n/* harmony export */   markNotificationAsRead: function() { return /* binding */ markNotificationAsRead; },\n/* harmony export */   redeemReward: function() { return /* binding */ redeemReward; },\n/* harmony export */   updateRewardPoints: function() { return /* binding */ updateRewardPoints; },\n/* harmony export */   updateWasteLocationStatus: function() { return /* binding */ updateWasteLocationStatus; }\n/* harmony export */ });\n/* harmony import */ var _dbConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dbConfig */ \"(app-pages-browser)/./src/utils/db/dbConfig.ts\");\n/* harmony import */ var _schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema */ \"(app-pages-browser)/./src/utils/db/schema.ts\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm */ \"(app-pages-browser)/./node_modules/drizzle-orm/sql/expressions/conditions.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm */ \"(app-pages-browser)/./node_modules/drizzle-orm/sql/expressions/select.js\");\n\n\n\n// In-memory storage for notifications and reports\nlet notifications = [];\nlet reports = [];\nlet nextReportId = 1;\nlet nextNotificationId = 1;\nasync function createUser(email, name) {\n    try {\n        // Attempt to insert a new user.\n        // If a conflict occurs on the email field, do nothing.\n        const [newUser] = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.insert(_schema__WEBPACK_IMPORTED_MODULE_1__.Users).values({\n            email,\n            name,\n            totalPoints: 0,\n            totalWaste: \"0\",\n            totalReports: 0\n        }).onConflictDoNothing() // This prevents duplicate key error\n        .returning();\n        // If the insert did not create a new record, fetch the existing user.\n        if (!newUser) {\n            const [existingUser] = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.select().from(_schema__WEBPACK_IMPORTED_MODULE_1__.Users).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(_schema__WEBPACK_IMPORTED_MODULE_1__.Users.email, email));\n            return existingUser;\n        }\n        return newUser;\n    } catch (error) {\n        console.error(\"Error creating user:\", error);\n        throw error;\n    }\n}\nasync function getUserByEmail(email) {\n    try {\n        const [user] = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.select().from(_schema__WEBPACK_IMPORTED_MODULE_1__.Users).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(_schema__WEBPACK_IMPORTED_MODULE_1__.Users.email, email));\n        return user;\n    } catch (error) {\n        console.error(\"Error getting user by email:\", error);\n        throw error;\n    }\n}\nfunction calculatePoints(difficulty, amount) {\n    const basePoints = 5;\n    const multiplier = difficulty === \"Easy\" ? 1 : difficulty === \"Medium\" ? 4 : 8;\n    return Math.floor(amount * basePoints * multiplier);\n}\nasync function createReport(userId, location, latitude, longitude, wasteType, amount, imageUrl) {\n    try {\n        var _amount_match;\n        const numericAmount = parseFloat(((_amount_match = amount.match(/\\d+(\\.\\d+)?/)) === null || _amount_match === void 0 ? void 0 : _amount_match[0]) || \"0\");\n        const difficulty = numericAmount <= 5 ? \"Easy\" : numericAmount <= 20 ? \"Medium\" : \"Hard\";\n        const points = calculatePoints(difficulty, numericAmount);\n        // Create in-memory report\n        const report = {\n            id: nextReportId++,\n            location,\n            wasteType,\n            amount,\n            createdAt: new Date().toISOString(),\n            latitude,\n            longitude\n        };\n        // Add to in-memory storage\n        reports.unshift(report);\n        // Update user's total points and waste\n        await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.update(_schema__WEBPACK_IMPORTED_MODULE_1__.Users).set({\n            totalPoints: _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.raw(\"total_points + \" + points),\n            totalWaste: _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.raw(\"total_waste + \" + numericAmount),\n            totalReports: _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.raw(\"total_reports + 1\")\n        }).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(_schema__WEBPACK_IMPORTED_MODULE_1__.Users.id, userId));\n        // Store points in database\n        await createTransaction(userId, \"earned_report\", points, \"Reported \".concat(amount, \" of \").concat(wasteType, \" waste\"));\n        await updateRewardPoints(userId, points);\n        // Create notification\n        notifications.push({\n            id: nextNotificationId++,\n            userId,\n            message: \"You've earned \".concat(points, \" points for reporting waste!\"),\n            type: \"reward\",\n            read: false,\n            createdAt: new Date()\n        });\n        return report;\n    } catch (error) {\n        console.error(\"Error creating report:\", error);\n        throw error;\n    }\n}\nasync function getRecentReports() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n    return reports.slice(0, limit);\n}\nasync function getUnreadNotifications(userId) {\n    return notifications.filter((n)=>n.userId === userId && !n.read);\n}\nasync function markNotificationAsRead(notificationId) {\n    const notification = notifications.find((n)=>n.id === notificationId);\n    if (notification) {\n        notification.read = true;\n    }\n}\nasync function getRewardTransactions(userId) {\n    try {\n        const transactions = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.select().from(_schema__WEBPACK_IMPORTED_MODULE_1__.Transactions).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(_schema__WEBPACK_IMPORTED_MODULE_1__.Transactions.userId, userId)).orderBy((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.desc)(_schema__WEBPACK_IMPORTED_MODULE_1__.Transactions.createdAt));\n        return transactions;\n    } catch (error) {\n        console.error(\"Error fetching reward transactions:\", error);\n        return [];\n    }\n}\nasync function createTransaction(userId, type, amount, description) {\n    try {\n        const [transaction] = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.insert(_schema__WEBPACK_IMPORTED_MODULE_1__.Transactions).values({\n            userId,\n            type,\n            amount,\n            description\n        }).returning();\n        return transaction;\n    } catch (error) {\n        console.error(\"Error creating transaction:\", error);\n        throw error;\n    }\n}\nasync function updateRewardPoints(userId, points) {\n    try {\n        const [reward] = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.insert(_schema__WEBPACK_IMPORTED_MODULE_1__.Rewards).values({\n            userId,\n            points,\n            name: \"Points Reward\",\n            description: \"Points earned from waste reporting\",\n            collectionInfo: \"Automatically collected\",\n            level: Math.floor(points / 100) + 1\n        }).returning();\n        return reward;\n    } catch (error) {\n        console.error(\"Error updating reward points:\", error);\n        throw error;\n    }\n}\nasync function getAllRewards() {\n    try {\n        const rewards = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.select({\n            id: _schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.id,\n            userId: _schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.userId,\n            points: _schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.points,\n            level: _schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.level,\n            createdAt: _schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.createdAt,\n            userName: _schema__WEBPACK_IMPORTED_MODULE_1__.Users.name\n        }).from(_schema__WEBPACK_IMPORTED_MODULE_1__.Rewards).leftJoin(_schema__WEBPACK_IMPORTED_MODULE_1__.Users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(_schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.userId, _schema__WEBPACK_IMPORTED_MODULE_1__.Users.id)).orderBy((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.desc)(_schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.points));\n        return rewards;\n    } catch (error) {\n        console.error(\"Error fetching all rewards:\", error);\n        return [];\n    }\n}\nasync function getAvailableRewards(userId) {\n    try {\n        const rewards = await _dbConfig__WEBPACK_IMPORTED_MODULE_0__.db.select().from(_schema__WEBPACK_IMPORTED_MODULE_1__.Rewards).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(_schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.userId, userId)).orderBy((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.desc)(_schema__WEBPACK_IMPORTED_MODULE_1__.Rewards.createdAt));\n        return rewards;\n    } catch (error) {\n        console.error(\"Error fetching available rewards:\", error);\n        return [];\n    }\n}\nasync function redeemReward(userId, points) {\n    try {\n        await createTransaction(userId, \"redeemed\", points, \"Redeemed \".concat(points, \" points\"));\n    } catch (error) {\n        console.error(\"Error redeeming reward:\", error);\n        throw error;\n    }\n}\nasync function updateWasteLocationStatus(locationId, userId, status, verificationResult) {\n    try {\n        const points = calculatePoints(verificationResult.difficulty || \"Medium\", parseFloat(verificationResult.quantity) || 0);\n        await createTransaction(userId, \"earned_collect\", points, \"Completed waste collection task\");\n        await updateRewardPoints(userId, points);\n        notifications.push({\n            id: nextNotificationId++,\n            userId,\n            message: \"You've earned \".concat(points, \" points for collecting waste!\"),\n            type: \"reward\",\n            read: false,\n            createdAt: new Date()\n        });\n    } catch (error) {\n        console.error(\"Error updating waste location status:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/db/actions.ts\n"));

/***/ })

});